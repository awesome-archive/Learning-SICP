[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: EN Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 640
PlayResY: 480

[Aegisub Project Garbage]
Video Position: 1

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: EN,Calisto MT,21,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1,0,2,10,10,30,1
Style: Declare,微软雅黑,30,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,0,8,10,10,10,1
Style: staff,微软雅黑,30,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,0,2,5,10,10,10,1
Style: title,微软雅黑,35,&H001D64D9,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,0,1,5,10,10,10,1
Style: Default,雅黑宋体,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,1,0,2,10,10,30,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:10.10,0:00:14.60,EN,,0,0,0,,Computational Objects
Dialogue: 0,0:00:21.17,0:00:24.12,EN,,0,0,0,,PROFESSOR: Well, now that we've given you some power
Dialogue: 0,0:00:24.43,0:00:27.40,EN,,0,0,0,,to make independent local state and to model objects,
Dialogue: 0,0:00:28.33,0:00:32.67,EN,,0,0,0,,I thought we'd do a bit of programming of a very complicated kind,
Dialogue: 0,0:00:34.03,0:00:36.36,EN,,0,0,0,,just to illustrate what you can do with this sort of thing.
Dialogue: 0,0:00:40.43,0:00:43.48,EN,,0,0,0,,I suppose, as I said, we were motivated by physical systems
Dialogue: 0,0:00:44.11,0:00:46.25,EN,,0,0,0,,the ways we like to think about physical systems,
Dialogue: 0,0:00:46.99,0:00:51.08,EN,,0,0,0,,which is that there are these things that the world is made out of.
Dialogue: 0,0:00:52.06,0:00:55.98,EN,,0,0,0,,And each of these things has particular independent local state,
Dialogue: 0,0:00:57.24,0:00:59.87,EN,,0,0,0,,and therefore it is a thing. That's what makes it a thing.
Dialogue: 0,0:01:01.28,0:01:04.27,EN,,0,0,0,,And then we're going to say that in the model in the world
Dialogue: 0,0:01:04.28,0:01:09.90,EN,,0,0,0,,we have a world and a model in our minds and in the computer of that world.
Dialogue: 0,0:01:10.94,0:01:12.54,EN,,0,0,0,,And what I want to make is a correspondence
Dialogue: 0,0:01:12.78,0:01:15.21,EN,,0,0,0,,between the objects in the world and the objects in the computer,
Dialogue: 0,0:01:15.87,0:01:17.74,EN,,0,0,0,,the relationships between the objects in the world
Dialogue: 0,0:01:17.96,0:01:21.72,EN,,0,0,0,,and the relationships between those same obj...--the model objects in the computer,
Dialogue: 0,0:01:23.18,0:01:25.52,EN,,0,0,0,,and the functions that relate things in the
Dialogue: 0,0:01:25.93,0:01:28.11,EN,,0,0,0,,to the functions that relate things in the computer.
Dialogue: 0,0:01:30.84,0:01:33.82,EN,,0,0,0,,This buys us modularity.
Dialogue: 0,0:01:34.74,0:01:36.75,EN,,0,0,0,,If we really believe the world is like that,
Dialogue: 0,0:01:37.36,0:01:38.72,EN,,0,0,0,,that it's made out of these little pieces,
Dialogue: 0,0:01:39.20,0:01:41.47,EN,,0,0,0,,and of course we could arrange our world to be like that,
Dialogue: 0,0:01:42.03,0:01:43.95,EN,,0,0,0,,we could only model those things that are like that,
Dialogue: 0,0:01:45.45,0:01:49.02,EN,,0,0,0,,then we can inherit the modularity in the world into our programming.
Dialogue: 0,0:01:50.45,0:01:53.58,EN,,0,0,0,,That's why we would invent some of this object-oriented programming.
Dialogue: 0,0:01:55.42,0:01:58.19,EN,,0,0,0,,Well, let's take the best kind of objects I know.
Dialogue: 0,0:01:58.89,0:02:04.17,EN,,0,0,0,,They're completely--they're completely wonderful: electrical systems.
Dialogue: 0,0:02:06.40,0:02:12.99,EN,,0,0,0,,Electrical systems really are the physicist's best, best objects.
Dialogue: 0,0:02:14.22,0:02:16.76,EN,,0,0,0,,You see over here I have some piece of machinery.
Dialogue: 0,0:02:17.12,0:02:18.28,EN,,0,0,0,,Right here's a piece of machinery.
Dialogue: 0,0:02:20.04,0:02:22.88,EN,,0,0,0,,And it's got an electrical wire connecting
Dialogue: 0,0:02:23.66,0:02:26.40,EN,,0,0,0,,one part of the machinery with another part of the machinery.
Dialogue: 0,0:02:27.56,0:02:30.86,EN,,0,0,0,,And one of the wonderful properties of the electrical world
Dialogue: 0,0:02:31.64,0:02:33.12,EN,,0,0,0,,is that I can say this is an object,
Dialogue: 0,0:02:34.01,0:02:34.97,EN,,0,0,0,,and this is an object,
Dialogue: 0,0:02:35.71,0:02:37.53,EN,,0,0,0,,and they're-- the connection between them is clear.
Dialogue: 0,0:02:38.24,0:02:43.32,EN,,0,0,0,,In principle, there is no connection that I didn't describe with these wires.
Dialogue: 0,0:02:44.74,0:02:46.12,EN,,0,0,0,,Let's say if I have light bulbs,
Dialogue: 0,0:02:46.52,0:02:50.32,EN,,0,0,0,,Let's say if I have light bulbs, a light bulb and a power supply that's plugged into the outlet.
Dialogue: 0,0:02:51.63,0:02:53.53,EN,,0,0,0,,Then the connection is perfectly clear.
Dialogue: 0,0:02:53.62,0:02:55.42,EN,,0,0,0,,There's no other connections that we know of.
Dialogue: 0,0:02:56.22,0:03:02.33,EN,,0,0,0,,If I were to tie a knot in the wire that connects the light bulb to the power supply,
Dialogue: 0,0:03:02.68,0:03:03.64,EN,,0,0,0,,the light remains lit up.
Dialogue: 0,0:03:04.04,0:03:04.76,EN,,0,0,0,,It doesn't care.
Dialogue: 0,0:03:07.44,0:03:12.40,EN,,0,0,0,,That the way the physics is arranged is such that the connection can be made abstract,
Dialogue: 0,0:03:13.08,0:03:15.27,EN,,0,0,0,,at least for low frequencies and things like that.
Dialogue: 0,0:03:17.84,0:03:20.88,EN,,0,0,0,,So in fact, we have captured all of the connections there really are.
Dialogue: 0,0:03:22.35,0:03:23.87,EN,,0,0,0,,Well, as you can go one step further
Dialogue: 0,0:03:23.90,0:03:27.31,EN,,0,0,0,,and talk about the most abstract types of electrical systems we have,
Dialogue: 0,0:03:27.85,0:03:29.42,EN,,0,0,0,,digital to dual circuits.
Dialogue: 0,0:03:31.69,0:03:33.66,EN,,0,0,0,,And here there are certain kinds of objects.
Dialogue: 0,0:03:34.64,0:03:40.12,EN,,0,0,0,,For example, in digital circuits we have things like inverters.
Dialogue: 0,0:03:41.39,0:03:42.78,EN,,0,0,0,,We have things like and-gates.
Dialogue: 0,0:03:43.99,0:03:45.40,EN,,0,0,0,,We have things like or-gates.
Dialogue: 0,0:03:47.21,0:03:50.12,EN,,0,0,0,,We connect them together by sort-of wires
Dialogue: 0,0:03:52.00,0:03:54.94,EN,,0,0,0,,which represent abstract signals.
Dialogue: 0,0:03:55.61,0:03:57.18,EN,,0,0,0,,We don't really care as physical variables
Dialogue: 0,0:03:57.21,0:03:59.72,EN,,0,0,0,,whether these are voltages or currents or some combination
Dialogue: 0,0:04:00.01,0:04:03.44,EN,,0,0,0,,or water, water pressure.
Dialogue: 0,0:04:05.20,0:04:07.32,EN,,0,0,0,,These abstract variables represent certain signals.
Dialogue: 0,0:04:09.42,0:04:12.89,EN,,0,0,0,,And we build systems by wiring these things together with wires.
Dialogue: 0,0:04:14.07,0:04:16.22,EN,,0,0,0,,So today what I'm going to show you, right now,
Dialogue: 0,0:04:17.63,0:04:20.17,EN,,0,0,0,,we're going to build up an invented language in Lisp,
Dialogue: 0,0:04:22.14,0:04:25.08,EN,,0,0,0,,embedded in the same sense that Henderson's picture language was embedded,
Dialogue: 0,0:04:26.16,0:04:27.32,EN,,0,0,0,,which is not the same sense
Dialogue: 0,0:04:27.88,0:04:31.61,EN,,0,0,0,,as the language of pattern match and substitution was done yesterday.
Dialogue: 0,0:04:32.80,0:04:36.30,EN,,0,0,0,,The pattern match substitution language was interpreted by a Lisp program.
Dialogue: 0,0:04:38.16,0:04:40.52,EN,,0,0,0,,But the embedding of Henderson's program
Dialogue: 0,0:04:40.56,0:04:44.27,EN,,0,0,0,,is that we just build up more and more procedures that encapsulate the structure we want.
Dialogue: 0,0:04:45.48,0:04:46.75,EN,,0,0,0,,So for example here,
Dialogue: 0,0:04:47.72,0:04:50.64,EN,,0,0,0,,I'm going to have some various primitive kinds of objects, as you see,
Dialogue: 0,0:04:51.05,0:04:52.12,EN,,0,0,0,,that one and that one.
Dialogue: 0,0:04:53.50,0:04:55.18,EN,,0,0,0,,I'm going to use wires to combine them.
Dialogue: 0,0:04:55.98,0:04:59.37,EN,,0,0,0,,The way I represent attaching-- I can make wires.
Dialogue: 0,0:04:59.87,0:05:01.24,EN,,0,0,0,,So let's say A is a wire.
Dialogue: 0,0:05:01.74,0:05:02.69,EN,,0,0,0,,And B is a wire.
Dialogue: 0,0:05:02.69,0:05:03.46,EN,,0,0,0,,And C is a wire.
Dialogue: 0,0:05:03.46,0:05:04.23,EN,,0,0,0,,And D is a wire.
Dialogue: 0,0:05:04.23,0:05:04.83,EN,,0,0,0,,And E is wire.
Dialogue: 0,0:05:04.83,0:05:05.64,EN,,0,0,0,,And S is a wire.
Dialogue: 0,0:05:06.88,0:05:12.75,EN,,0,0,0,,Well, an or-gate that has both inputs, the inputs being A and B,
Dialogue: 0,0:05:13.16,0:05:14.75,EN,,0,0,0,,and the output being wire D,
Dialogue: 0,0:05:15.07,0:05:16.12,EN,,0,0,0,,you notate like this.
Dialogue: 0,0:05:18.14,0:05:22.14,EN,,0,0,0,,An and-gate, which has inputs A and B and output C,
Dialogue: 0,0:05:22.22,0:05:23.24,EN,,0,0,0,,we notate like that.
Dialogue: 0,0:05:24.82,0:05:28.46,EN,,0,0,0,,By making such a sequence of declarations,
Dialogue: 0,0:05:29.29,0:05:31.64,EN,,0,0,0,,I can wire together an arbitrary circuit.
Dialogue: 0,0:05:32.75,0:05:34.64,EN,,0,0,0,,So I've just told you a set of primitives
Dialogue: 0,0:05:35.31,0:05:38.51,EN,,0,0,0,,and means of combination for building digital circuits,
Dialogue: 0,0:05:40.09,0:05:43.04,EN,,0,0,0,,when I need more in a real language than abstraction.
Dialogue: 0,0:05:43.69,0:05:52.24,EN,,0,0,0,,And so for example, here I have--here I have a half adder.
Dialogue: 0,0:05:52.67,0:05:55.55,EN,,0,0,0,,It's something you all know if you've done any digital design.
Dialogue: 0,0:05:56.93,0:06:00.44,EN,,0,0,0,,It's used for adding numbers together on A and B
Dialogue: 0,0:06:00.62,0:06:02.12,EN,,0,0,0,,and putting out a sum and a carry.
Dialogue: 0,0:06:04.35,0:06:06.80,EN,,0,0,0,,And in fact, the wiring diagram is exactly what I told you.
Dialogue: 0,0:06:07.45,0:06:10.99,EN,,0,0,0,,A half adder with things that come out of the box--
Dialogue: 0,0:06:11.13,0:06:14.11,EN,,0,0,0,,you see the box, the boundary, the abstraction is always a box.
Dialogue: 0,0:06:14.79,0:06:19.70,EN,,0,0,0,,And there are things that come out of it, A, B, S, and C.
Dialogue: 0,0:06:19.70,0:06:21.79,EN,,0,0,0,,Those are the declared variables--
Dialogue: 0,0:06:23.39,0:06:26.25,EN,,0,0,0,,declared variables of a lambda expression,
Dialogue: 0,0:06:26.28,0:06:28.01,EN,,0,0,0,,which is the one that defines half adder.
Dialogue: 0,0:06:31.40,0:06:35.96,EN,,0,0,0,,And internal to that, I make up some more wires, D and E,
Dialogue: 0,0:06:36.00,0:06:37.44,EN,,0,0,0,,which I'm going to use for the interconnect--
Dialogue: 0,0:06:37.74,0:06:40.40,EN,,0,0,0,,here E is this one and D is this wire,
Dialogue: 0,0:06:41.32,0:06:43.50,EN,,0,0,0,,the interconnect that doesn't come through the walls of the box--
Dialogue: 0,0:06:45.05,0:06:46.83,EN,,0,0,0,,and wire things together as you just saw.
Dialogue: 0,0:06:48.79,0:06:50.89,EN,,0,0,0,,And the nice thing about this that I've just shown you
Dialogue: 0,0:06:51.05,0:06:53.02,EN,,0,0,0,,this language is hierarchical in the right way.
Dialogue: 0,0:06:53.85,0:06:55.71,EN,,0,0,0,,If a language isn't hierarchical in the right way,
Dialogue: 0,0:06:55.95,0:06:59.96,EN,,0,0,0,,if it turns out that a compound object doesn't look like a primitive,
Dialogue: 0,0:07:00.38,0:07:01.53,EN,,0,0,0,,there's something wrong with the language--
Dialogue: 0,0:07:02.59,0:07:04.22,EN,,0,0,0,,at least the way I feel about that.
Dialogue: 0,0:07:06.41,0:07:09.58,EN,,0,0,0,,So here we have--here, instead of starting with mathematical functions,
Dialogue: 0,0:07:09.60,0:07:11.12,EN,,0,0,0,,or things that compute mathematical functions,
Dialogue: 0,0:07:11.15,0:07:12.65,EN,,0,0,0,,which is what we've been doing up until now,
Dialogue: 0,0:07:13.85,0:07:16.65,EN,,0,0,0,,instead of starting with things that look like mathematical functions,
Dialogue: 0,0:07:16.67,0:07:17.63,EN,,0,0,0,,or compute such things,
Dialogue: 0,0:07:17.85,0:07:20.88,EN,,0,0,0,,we are starting with things that are electrical objects
Dialogue: 0,0:07:21.04,0:07:22.64,EN,,0,0,0,,and we build up more electrical objects.
Dialogue: 0,0:07:23.35,0:07:28.83,EN,,0,0,0,,And the glue we're using is basically the Lisp structure: lambdas.
Dialogue: 0,0:07:30.38,0:07:32.93,EN,,0,0,0,,Lambda is the ultimate glue, if you will.
Dialogue: 0,0:07:33.32,0:07:36.35,EN,,0,0,0,,And of course, half adder itself can be used
Dialogue: 0,0:07:37.64,0:07:41.04,EN,,0,0,0,,in a more complicated abstraction called a full adder,
Dialogue: 0,0:07:41.60,0:07:45.05,EN,,0,0,0,,which in fact involves two half adders, as you see here,
Dialogue: 0,0:07:45.47,0:07:47.87,EN,,0,0,0,,hooked together with some extra wires,
Dialogue: 0,0:07:48.08,0:07:51.29,EN,,0,0,0,,that you see here, S, C1, and C2, and an or-gate,
Dialogue: 0,0:07:52.19,0:07:53.60,EN,,0,0,0,,to manufacture a full adder,
Dialogue: 0,0:07:53.87,0:08:00.78,EN,,0,0,0,,which takes a input number, another input number, a carry in,
Dialogue: 0,0:08:01.36,0:08:04.17,EN,,0,0,0,,and produces output, a sum and a carry out.
Dialogue: 0,0:08:05.90,0:08:10.70,EN,,0,0,0,,And out of full adders, you can make real adder chains and big adders.
Dialogue: 0,0:08:12.99,0:08:14.83,EN,,0,0,0,,So we have here a language so far
Dialogue: 0,0:08:16.06,0:08:21.76,EN,,0,0,0,,That has primitives, means of combination, and means of abstraction to real language.
Dialogue: 0,0:08:22.27,0:08:23.36,EN,,0,0,0,,Now, how are we going to implement this?
Dialogue: 0,0:08:25.00,0:08:26.84,EN,,0,0,0,,Well, let's do it easily.
Dialogue: 0,0:08:27.07,0:08:27.96,EN,,0,0,0,,Let's look at the primitives.
Dialogue: 0,0:08:28.12,0:08:30.11,EN,,0,0,0,,The only problem is we have to implement the primitives.
Dialogue: 0,0:08:31.16,0:08:32.56,EN,,0,0,0,,Nothing else has to be implemented,
Dialogue: 0,0:08:33.74,0:08:38.00,EN,,0,0,0,,because we're picking up the means of combination and abstraction from Lisp,
Dialogue: 0,0:08:39.96,0:08:41.88,EN,,0,0,0,,inheriting them in the embedding.
Dialogue: 0,0:08:43.77,0:08:45.44,EN,,0,0,0,,OK, so let's look at a particular primitive.
Dialogue: 0,0:08:45.86,0:08:47.40,EN,,0,0,0,,An inverter is a nice one.
Dialogue: 0,0:08:51.54,0:08:54.67,EN,,0,0,0,,Now, inverter has two wires coming in, an in and an out.
Dialogue: 0,0:08:57.31,0:09:02.62,EN,,0,0,0,,And somehow, it's going to have to know what to do when a signal comes in.
Dialogue: 0,0:09:04.30,0:09:07.00,EN,,0,0,0,,So somehow it's going to have to tell its input wire--
Dialogue: 0,0:09:07.64,0:09:10.14,EN,,0,0,0,,and now we're going to talk about objects
Dialogue: 0,0:09:10.44,0:09:12.41,EN,,0,0,0,,and we're going to see this in a little more detail soon--
Dialogue: 0,0:09:13.23,0:09:14.84,EN,,0,0,0,,but it's going to have to tell its input wire
Dialogue: 0,0:09:15.82,0:09:18.48,EN,,0,0,0,,that when you change, tell me.
Dialogue: 0,0:09:20.12,0:09:22.11,EN,,0,0,0,,So this object, the object which is the inverter
Dialogue: 0,0:09:22.41,0:09:24.38,EN,,0,0,0,,has to tell the object which is the input wire,
Dialogue: 0,0:09:25.13,0:09:26.40,EN,,0,0,0,,hi, my name is George.
Dialogue: 0,0:09:26.87,0:09:31.02,EN,,0,0,0,,And my, my job is to do something with results when you change.
Dialogue: 0,0:09:31.72,0:09:34.19,EN,,0,0,0,,So when you change, you get a change, tell me about it.
Dialogue: 0,0:09:34.73,0:09:35.72,EN,,0,0,0,,Because I've got to do something with that.
Dialogue: 0,0:09:36.88,0:09:40.30,EN,,0,0,0,,Well, that's done down here by adding an action on the input wire called invert-in,
Dialogue: 0,0:09:41.40,0:09:44.64,EN,,0,0,0,,Well, that's done down here by adding an action on the input wire called invert-in,
Dialogue: 0,0:09:45.07,0:09:46.94,EN,,0,0,0,,where invert-in is defined over here
Dialogue: 0,0:09:47.05,0:09:48.76,EN,,0,0,0,,to be a procedure of no arguments,
Dialogue: 0,0:09:49.98,0:09:54.59,EN,,0,0,0,,which gets the logical not of the signal on the input wire.
Dialogue: 0,0:09:56.06,0:09:58.64,EN,,0,0,0,,And after some delay, which is the inverter delay,
Dialogue: 0,0:09:59.26,0:10:01.15,EN,,0,0,0,,all these electrical objects have delays,
Dialogue: 0,0:10:02.88,0:10:04.46,EN,,0,0,0,,we'll do the following thing--
Dialogue: 0,0:10:04.67,0:10:07.14,EN,,0,0,0,,set the signal on the output wire to the new value.
Dialogue: 0,0:10:10.16,0:10:11.36,EN,,0,0,0,,A very simple program.
Dialogue: 0,0:10:12.40,0:10:15.28,EN,,0,0,0,,Now, you have to imagine that the output wire has to be sensitive
Dialogue: 0,0:10:15.77,0:10:18.27,EN,,0,0,0,,and know that when its signal changes,
Dialogue: 0,0:10:19.28,0:10:21.15,EN,,0,0,0,,it may have to tell other guys,
Dialogue: 0,0:10:21.79,0:10:24.78,EN,,0,0,0,,Hi, wake up. My value has changed.
Dialogue: 0,0:10:26.05,0:10:30.14,EN,,0,0,0,,So when you hook together inverter with an and-gate or something like that,
Dialogue: 0,0:10:30.46,0:10:32.20,EN,,0,0,0,,there has to be a lot of communication going on
Dialogue: 0,0:10:32.86,0:10:35.07,EN,,0,0,0,,to make sure that the signal propagates right.
Dialogue: 0,0:10:36.81,0:10:38.62,EN,,0,0,0,,And down here is nothing very exciting.
Dialogue: 0,0:10:38.62,0:10:40.72,EN,,0,0,0,,This is just the definition of logical not
Dialogue: 0,0:10:40.72,0:10:45.24,EN,,0,0,0,,for some particular representations of the logical values-- 1, 0 in this case.
Dialogue: 0,0:10:46.73,0:10:49.16,EN,,0,0,0,,And we can look at things more complicated like and-gates.
Dialogue: 0,0:10:49.78,0:10:55.80,EN,,0,0,0,,And-gates take two inputs, A1 and A2, we'll call them, and produce an output.
Dialogue: 0,0:10:56.73,0:11:00.64,EN,,0,0,0,,But the structure of the and-gate is identical to the one we just saw.
Dialogue: 0,0:11:00.86,0:11:03.44,EN,,0,0,0,,There's one called an and-action procedure that's defined,
Dialogue: 0,0:11:04.52,0:11:09.07,EN,,0,0,0,,which is the thing that gets called when an input is changed.
Dialogue: 0,0:11:10.91,0:11:12.88,EN,,0,0,0,,And what it does, of course, is nothing more than
Dialogue: 0,0:11:12.91,0:11:15.37,EN,,0,0,0,,compute the logical and of the signals on the inputs.
Dialogue: 0,0:11:16.19,0:11:18.76,EN,,0,0,0,,And after some delay, called the and-gate-delay,
Dialogue: 0,0:11:20.46,0:11:24.36,EN,,0,0,0,,calls this procedure, which sets a signal on the output to a new value.
Dialogue: 0,0:11:25.47,0:11:28.35,EN,,0,0,0,,Now, how I implement these things is all wishful thinking.
Dialogue: 0,0:11:28.35,0:11:31.08,EN,,0,0,0,,As you see here, I have an assignment operation.
Dialogue: 0,0:11:32.02,0:11:32.78,EN,,0,0,0,,It's not set.
Dialogue: 0,0:11:34.57,0:11:36.78,EN,,0,0,0,,It's a derived assignment operation in the same way
Dialogue: 0,0:11:36.78,0:11:38.73,EN,,0,0,0,,we had functions that were derived from CAR and CDR.
Dialogue: 0,0:11:40.80,0:11:44.81,EN,,0,0,0,,So I, by convention, label that with an exclamation point.
Dialogue: 0,0:11:46.34,0:11:49.18,EN,,0,0,0,,And over here, you see there's an add-action!,
Dialogue: 0,0:11:49.44,0:11:54.67,EN,,0,0,0,,which is to inform the wire, called A1 locally in this and-gate,
Dialogue: 0,0:11:55.63,0:11:58.68,EN,,0,0,0,,to call the and-action-procedure when it gets changed,
Dialogue: 0,0:11:59.58,0:12:02.91,EN,,0,0,0,,and the wire A2 to call the and-action procedure when it gets changed.
Dialogue: 0,0:12:06.31,0:12:07.23,EN,,0,0,0,,All very simple.
Dialogue: 0,0:12:09.96,0:12:12.09,EN,,0,0,0,,Well, let's talk a little bit about this communication
Dialogue: 0,0:12:12.70,0:12:16.12,EN,,0,0,0,,that must occur between these various parts.
Dialogue: 0,0:12:18.54,0:12:19.66,EN,,0,0,0,,Suppose, for example,
Dialogue: 0,0:12:23.12,0:12:24.27,EN,,0,0,0,,I have a very simple circuit
Dialogue: 0,0:12:24.27,0:12:30.46,EN,,0,0,0,,which contains and-gate with wires a and b.
Dialogue: 0,0:12:31.92,0:12:38.00,EN,,0,0,0,,And that connects through a wire called c to an inverter
Dialogue: 0,0:12:39.72,0:12:41.53,EN,,0,0,0,,which has a wire output called d.
Dialogue: 0,0:12:44.20,0:12:47.34,EN,,0,0,0,,What are the comput...--here's the physical world.
Dialogue: 0,0:12:47.36,0:12:49.02,EN,,0,0,0,,It's an abstraction of the physical world.
Dialogue: 0,0:12:49.86,0:12:53.40,EN,,0,0,0,,Now I can buy these out of little pieces that you get at Radio Shack for a few cents.
Dialogue: 0,0:12:54.88,0:12:56.32,EN,,0,0,0,,And there are boxes that act like this,
Dialogue: 0,0:12:57.16,0:13:00.22,EN,,0,0,0,,which have little numbers on them like LS04 or something.
Dialogue: 0,0:13:01.53,0:13:08.16,EN,,0,0,0,,Now supposing I were to try to say what's the computational model.
Dialogue: 0,0:13:09.01,0:13:10.94,EN,,0,0,0,,What is the thing that corresponds to that,
Dialogue: 0,0:13:11.13,0:13:14.09,EN,,0,0,0,,that part of reality in the mind of us and in the computer?
Dialogue: 0,0:13:15.85,0:13:19.13,EN,,0,0,0,,Well, I have to assign for every object in the world an object in the computer,
Dialogue: 0,0:13:19.79,0:13:24.27,EN,,0,0,0,,and for every relationship in the world between them a relationship in the computer.
Dialogue: 0,0:13:26.06,0:13:26.80,EN,,0,0,0,,That's my goal.
Dialogue: 0,0:13:28.56,0:13:29.45,EN,,0,0,0,,So let's do that.
Dialogue: 0,0:13:30.90,0:13:34.20,EN,,0,0,0,,Well, I have some sort of thing called the signal, A.
Dialogue: 0,0:13:35.71,0:13:36.94,EN,,0,0,0,,This is A. It's a signal.
Dialogue: 0,0:13:37.94,0:13:39.32,EN,,0,0,0,,It's a cloudy thing like that.
Dialogue: 0,0:13:39.90,0:13:42.80,EN,,0,0,0,,And I have another one down here which I'm going to call B.
Dialogue: 0,0:13:46.68,0:13:47.47,EN,,0,0,0,,It's another signal.
Dialogue: 0,0:13:49.14,0:13:50.91,EN,,0,0,0,,Now this signal--these two signals
Dialogue: 0,0:13:51.10,0:13:52.81,EN,,0,0,0,,are somehow going to have to hook together
Dialogue: 0,0:13:53.72,0:13:58.75,EN,,0,0,0,,into a box, let's call it this, which is the and-gate, action procedure.
Dialogue: 0,0:14:00.32,0:14:02.04,EN,,0,0,0,,That's the and-gate's action procedure.
Dialogue: 0,0:14:07.66,0:14:08.59,EN,,0,0,0,,And it's going to produce
Dialogue: 0,0:14:09.15,0:14:13.29,EN,,0,0,0,,well, it's going to interact with a signal object, which we call C--
Dialogue: 0,0:14:16.22,0:14:18.88,EN,,0,0,0,,a wire object, excuse me, we call C.
Dialogue: 0,0:14:20.59,0:14:26.28,EN,,0,0,0,,this is going to put out again, or connect to, another action procedure
Dialogue: 0,0:14:26.28,0:14:30.33,EN,,0,0,0,,which is one associated with the inverter in the world, not.
Dialogue: 0,0:14:32.86,0:14:40.65,EN,,0,0,0,,And I'm going to have another--another wire, which we'll call D.
Dialogue: 0,0:14:42.97,0:14:45.29,EN,,0,0,0,,So here's my layout of stuff.
Dialogue: 0,0:14:46.00,0:14:49.44,EN,,0,0,0,,Now we have to say what's inside them and what they have to know to compute.
Dialogue: 0,0:14:51.50,0:14:53.69,EN,,0,0,0,,Well, every--every one of these wires has to know
Dialogue: 0,0:14:53.69,0:14:56.36,EN,,0,0,0,,what the value of the signal that's on that wire is.
Dialogue: 0,0:14:57.34,0:15:00.00,EN,,0,0,0,,So there's going to be some variable inside here, we'll call it signal.
Dialogue: 0,0:15:02.97,0:15:04.04,EN,,0,0,0,,And he owns a value.
Dialogue: 0,0:15:05.68,0:15:07.74,EN,,0,0,0,,So there must be some environment associated with this.
Dialogue: 0,0:15:08.89,0:15:11.34,EN,,0,0,0,,And for each one of these, there must be an environment that binds signal.
Dialogue: 0,0:15:15.40,0:15:16.88,EN,,0,0,0,,And there must be a signal here, therefore.
Dialogue: 0,0:15:19.40,0:15:21.92,EN,,0,0,0,,And presumably, signal's a value that's either 1 or 0,
Dialogue: 0,0:15:22.81,0:15:23.48,EN,,0,0,0,,and signal.
Dialogue: 0,0:15:28.00,0:15:30.56,EN,,0,0,0,,Now, we also have to have some
Dialogue: 0,0:15:31.26,0:15:34.11,EN,,0,0,0,,list of people to inform if the signal here changes.
Dialogue: 0,0:15:36.66,0:15:37.66,EN,,0,0,0,,We're going to have to inform this.
Dialogue: 0,0:15:39.30,0:15:43.96,EN,,0,0,0,,So I've got that list. We'll call it the Action Procedures, AP.
Dialogue: 0,0:15:44.50,0:15:45.60,EN,,0,0,0,,And it's presumably a list.
Dialogue: 0,0:15:46.44,0:15:49.00,EN,,0,0,0,,But the first thing on the list, in this case, is this guy.
Dialogue: 0,0:15:50.50,0:15:54.81,EN,,0,0,0,,And the action procedures of this one happens to have some list of stuff.
Dialogue: 0,0:15:54.81,0:15:58.17,EN,,0,0,0,,There might be other people who are sharing A, who are looking at it.
Dialogue: 0,0:15:59.02,0:16:01.31,EN,,0,0,0,,So there might be other guys on this list, like
Dialogue: 0,0:16:01.72,0:16:03.23,EN,,0,0,0,,like somebody over there that we don't know about.
Dialogue: 0,0:16:03.63,0:16:04.88,EN,,0,0,0,,It's the other guy attached to A.
Dialogue: 0,0:16:07.20,0:16:09.64,EN,,0,0,0,,And the action procedure here also has to point to that,
Dialogue: 0,0:16:11.12,0:16:12.40,EN,,0,0,0,,the list of action procedures.
Dialogue: 0,0:16:13.07,0:16:16.35,EN,,0,0,0,,And of course, that means this one, its action procedures
Dialogue: 0,0:16:16.78,0:16:18.53,EN,,0,0,0,,has to point up to here.
Dialogue: 0,0:16:18.53,0:16:20.89,EN,,0,0,0,,This is the things-- the people it has to inform.
Dialogue: 0,0:16:21.77,0:16:23.18,EN,,0,0,0,,And this guy has some too.
Dialogue: 0,0:16:24.28,0:16:25.24,EN,,0,0,0,,But I don't know what they are
Dialogue: 0,0:16:25.26,0:16:26.65,EN,,0,0,0,,because I didn't draw it in my diagram.
Dialogue: 0,0:16:27.19,0:16:28.36,EN,,0,0,0,,It's the things connected to D.
Dialogue: 0,0:16:30.32,0:16:32.62,EN,,0,0,0,,Now, it's also the case
Dialogue: 0,0:16:33.80,0:16:36.96,EN,,0,0,0,,that when the and-action procedure is awakened,
Dialogue: 0,0:16:37.02,0:16:41.31,EN,,0,0,0,,saying one of the people who know that you've told
Dialogue: 0,0:16:41.45,0:16:44.84,EN,,0,0,0,,one of the people you've told to wake you up if their signal changes,
Dialogue: 0,0:16:46.97,0:16:48.81,EN,,0,0,0,,you have to go look and ask them what's their signal
Dialogue: 0,0:16:49.32,0:16:52.25,EN,,0,0,0,,so you can do the and, and produce a signal for this one.
Dialogue: 0,0:16:57.09,0:16:58.75,EN,,0,0,0,,So there has to be, for example,
Dialogue: 0,0:16:58.84,0:17:03.00,EN,,0,0,0,,information here saying A1, my A1 is this guy,
Dialogue: 0,0:17:03.90,0:17:06.48,EN,,0,0,0,,my A1 is this guy, and my A2 is this guy.
Dialogue: 0,0:17:08.93,0:17:09.98,EN,,0,0,0,,And not only that,
Dialogue: 0,0:17:11.79,0:17:15.20,EN,,0,0,0,,when I do my and, I'm going to have to tell this guy something.
Dialogue: 0,0:17:16.30,0:17:21.05,EN,,0,0,0,,So I need an output--  being this guy.
Dialogue: 0,0:17:25.80,0:17:30.03,EN,,0,0,0,,And similarly, this guy's going to have a thing called the input
Dialogue: 0,0:17:32.38,0:17:34.92,EN,,0,0,0,,that he interrogates to find out
Dialogue: 0,0:17:36.75,0:17:38.64,EN,,0,0,0,,what the value of the signal on the input is,
Dialogue: 0,0:17:38.64,0:17:40.09,EN,,0,0,0,,when the signal wakes up and says, I've changed,
Dialogue: 0,0:17:41.05,0:17:43.47,EN,,0,0,0,,and sends a message this way saying, I've changed.
Dialogue: 0,0:17:43.52,0:17:45.53,EN,,0,0,0,,This guy says, OK, what's your value now?
Dialogue: 0,0:17:46.90,0:17:50.12,EN,,0,0,0,,When he gets that value, then he's going to have to say,
Dialogue: 0,0:17:50.14,0:17:55.86,EN,,0,0,0,,OK, output changes this guy, changes this guy.
Dialogue: 0,0:18:00.60,0:18:01.24,EN,,0,0,0,,And so on.
Dialogue: 0,0:18:02.84,0:18:04.56,EN,,0,0,0,,And so I have to have at least that much connected-ness.
Dialogue: 0,0:18:06.24,0:18:09.23,EN,,0,0,0,,Now, let's go back and look, for example, at the and-gate.
Dialogue: 0,0:18:10.26,0:18:12.09,EN,,0,0,0,,Here we are back on this slide.
Dialogue: 0,0:18:13.67,0:18:15.04,EN,,0,0,0,,And we can see some of these parts.
Dialogue: 0,0:18:16.04,0:18:19.32,EN,,0,0,0,,For any particular and-gate, there is an A1, there is an A2, and the output.
Dialogue: 0,0:18:21.03,0:18:23.53,EN,,0,0,0,,And those are, those are
Dialogue: 0,0:18:25.08,0:18:28.16,EN,,0,0,0,,an environment that was created at the--those produce a frame
Dialogue: 0,0:18:28.41,0:18:31.24,EN,,0,0,0,,at the time and-gate was called,
Dialogue: 0,0:18:33.31,0:18:35.90,EN,,0,0,0,,A frame where A1, A2, and output are--
Dialogue: 0,0:18:36.67,0:18:39.20,EN,,0,0,0,,have as their values, they're bound to
Dialogue: 0,0:18:39.60,0:18:44.25,EN,,0,0,0,,the wires which, they are--which were passed in.
Dialogue: 0,0:18:46.24,0:18:47.31,EN,,0,0,0,,In that environment,
Dialogue: 0,0:18:47.74,0:18:49.85,EN,,0,0,0,,I constructed a procedure
Dialogue: 0,0:18:50.97,0:18:53.68,EN,,0,0,0,,this one right there.
Dialogue: 0,0:18:54.59,0:18:57.31,EN,,0,0,0,,And-action-procedure was constructed in that environment.
Dialogue: 0,0:18:58.35,0:19:00.70,EN,,0,0,0,,That was the result of evaluating a lambda expression.
Dialogue: 0,0:19:01.62,0:19:05.48,EN,,0,0,0,,So it hangs onto the frame where these were defined.
Dialogue: 0,0:19:07.16,0:19:09.34,EN,,0,0,0,,Local--part of its local state is that.
Dialogue: 0,0:19:11.70,0:19:13.47,EN,,0,0,0,,The and-action-procedure, therefore, has
Dialogue: 0,0:19:13.64,0:19:16.94,EN,,0,0,0,,access to A1, A2, and output as we see here.
Dialogue: 0,0:19:17.31,0:19:19.64,EN,,0,0,0,,A1, A2, and output.
Dialogue: 0,0:19:22.36,0:19:23.95,EN,,0,0,0,,Now, we haven't looked inside of a wire yet.
Dialogue: 0,0:19:26.03,0:19:26.99,EN,,0,0,0,,That's all that remains.
Dialogue: 0,0:19:29.03,0:19:29.92,EN,,0,0,0,,Let's look at a wire.
Dialogue: 0,0:19:33.52,0:19:36.25,EN,,0,0,0,,Like the overhead, very good.
Dialogue: 0,0:19:39.50,0:19:42.56,EN,,0,0,0,,Well, the wire, again, is a, is a somewhat complicated mess.
Dialogue: 0,0:19:43.09,0:19:44.64,EN,,0,0,0,,Ooh, wrong one.
Dialogue: 0,0:19:47.05,0:19:48.75,EN,,0,0,0,,It's a big complicated mess, like that.
Dialogue: 0,0:19:50.06,0:19:53.10,EN,,0,0,0,,But let's look at it in detail and see what's going on.
Dialogue: 0,0:19:54.72,0:19:56.67,EN,,0,0,0,,Well, the wire is one of these.
Dialogue: 0,0:19:57.76,0:20:03.52,EN,,0,0,0,,And it has to have two things that are part of it, that it's state.
Dialogue: 0,0:20:05.01,0:20:07.39,EN,,0,0,0,,One of them is the signal we see here.
Dialogue: 0,0:20:07.45,0:20:10.06,EN,,0,0,0,,Heres, when we call make-wire to make a wire,
Dialogue: 0,0:20:10.46,0:20:13.02,EN,,0,0,0,,then the first thing we do is we create some variables
Dialogue: 0,0:20:14.94,0:20:16.08,EN,,0,0,0,,which are the signal
Dialogue: 0,0:20:17.10,0:20:19.29,EN,,0,0,0,,and the action procedures for this wire.
Dialogue: 0,0:20:22.32,0:20:23.44,EN,,0,0,0,,And in that context,
Dialogue: 0,0:20:23.76,0:20:27.04,EN,,0,0,0,,we define various functions--or procedures, excuse me, procedures.
Dialogue: 0,0:20:27.84,0:20:31.15,EN,,0,0,0,,One of them is called set-my-signal to a new value.
Dialogue: 0,0:20:32.85,0:20:37.42,EN,,0,0,0,,And what that does is takes a new value in.
Dialogue: 0,0:20:37.93,0:20:40.36,EN,,0,0,0,,If that's equal to my current value of my signal, I'm done.
Dialogue: 0,0:20:40.36,0:20:42.62,EN,,0,0,0,,Otherwise, I set the signal to the new value
Dialogue: 0,0:20:42.75,0:20:44.60,EN,,0,0,0,,and call each of the action procedures
Dialogue: 0,0:20:46.52,0:20:52.51,EN,,0,0,0,,that I've been, that I've been--what's the right word? --  introduced to.
Dialogue: 0,0:20:54.63,0:21:01.53,EN,,0,0,0,,I get introduced when the and-gate was applied to me.
Dialogue: 0,0:21:04.13,0:21:05.60,EN,,0,0,0,,By add action procedure at the bottom.
Dialogue: 0,0:21:07.41,0:21:10.80,EN,,0,0,0,,Also, I have to define a way of accepting an action procedure--
Dialogue: 0,0:21:10.81,0:21:11.82,EN,,0,0,0,,which is what you see here---
Dialogue: 0,0:21:12.80,0:21:15.13,EN,,0,0,0,,which increments my action procedures
Dialogue: 0,0:21:15.56,0:21:21.63,EN,,0,0,0,,using set to the result of CONSing up a new process--a procedure,
Dialogue: 0,0:21:21.79,0:21:24.25,EN,,0,0,0,,which is passed to me, on to my actions procedures list.
Dialogue: 0,0:21:25.40,0:21:27.58,EN,,0,0,0,,And for technical reasons, I have to call that procedure one.
Dialogue: 0,0:21:27.78,0:21:29.20,EN,,0,0,0,,So I'm not going to tell you anything about that,
Dialogue: 0,0:21:29.39,0:21:33.15,EN,,0,0,0,,that has to do with event-driven simulations and getting them started,
Dialogue: 0,0:21:34.59,0:21:36.00,EN,,0,0,0,,which takes a little bit of thinking.
Dialogue: 0,0:21:36.95,0:21:39.40,EN,,0,0,0,,And finally, I'm going to define a thing called the dispatcher,
Dialogue: 0,0:21:39.96,0:21:43.58,EN,,0,0,0,,which is a way of passing a message to a wire,
Dialogue: 0,0:21:45.37,0:21:48.65,EN,,0,0,0,,which is going to be used to extract from it various information,
Dialogue: 0,0:21:49.07,0:21:51.48,EN,,0,0,0,,like what is the current signal value?
Dialogue: 0,0:21:53.82,0:21:55.66,EN,,0,0,0,,What is the method of setting your signal?
Dialogue: 0,0:21:57.18,0:21:58.28,EN,,0,0,0,,I want to get that out of it.
Dialogue: 0,0:22:00.10,0:22:02.60,EN,,0,0,0,,How do I--how do I add another action procedure?
Dialogue: 0,0:22:05.51,0:22:09.36,EN,,0,0,0,,And I'm going to return that dispatch, that procedure as a value.
Dialogue: 0,0:22:09.94,0:22:11.87,EN,,0,0,0,,So the wire that I've constructed
Dialogue: 0,0:22:12.00,0:22:13.55,EN,,0,0,0,,is a message accepting object
Dialogue: 0,0:22:14.25,0:22:16.01,EN,,0,0,0,,which accepts a message like, like
Dialogue: 0,0:22:16.44,0:22:18.36,EN,,0,0,0,,what's your method of adding action procedures?
Dialogue: 0,0:22:19.92,0:22:21.00,EN,,0,0,0,,That it'll give me a procedure,
Dialogue: 0,0:22:21.64,0:22:23.05,EN,,0,0,0,,which is the add action procedure,
Dialogue: 0,0:22:23.07,0:22:26.54,EN,,0,0,0,,which I can then apply to an action procedure
Dialogue: 0,0:22:27.05,0:22:29.01,EN,,0,0,0,,to create another action procedure in the wire.
Dialogue: 0,0:22:31.62,0:22:32.82,EN,,0,0,0,,So that's a permission.
Dialogue: 0,0:22:33.20,0:22:36.08,EN,,0,0,0,,So it's given me permission to change your action procedures.
Dialogue: 0,0:22:37.82,0:22:40.16,EN,,0,0,0,,And in fact, you can see that over here.
Dialogue: 0,0:22:41.71,0:22:42.32,EN,,0,0,0,,Next slide.
Dialogue: 0,0:22:43.53,0:22:43.82,EN,,0,0,0,,Ah.
Dialogue: 0,0:22:47.76,0:22:49.12,EN,,0,0,0,,This is nothing very interesting.
Dialogue: 0,0:22:49.12,0:22:50.65,EN,,0,0,0,,The call each of the action procedures
Dialogue: 0,0:22:50.89,0:22:52.57,EN,,0,0,0,,is just a CDRing down a list.
Dialogue: 0,0:22:52.73,0:22:54.60,EN,,0,0,0,,And I'm not going to even talk about that anymore.
Dialogue: 0,0:22:54.99,0:22:56.25,EN,,0,0,0,,We're too advanced for that.
Dialogue: 0,0:22:57.56,0:23:00.67,EN,,0,0,0,,However, if I want to get a signal from a wire,
Dialogue: 0,0:23:01.02,0:23:02.54,EN,,0,0,0,,I ask the wire-- which is,
Dialogue: 0,0:23:02.54,0:23:03.09,EN,,0,0,0,,what is the wire?
Dialogue: 0,0:23:03.09,0:23:05.40,EN,,0,0,0,,The wire is the dispatch returned by creating the wire.
Dialogue: 0,0:23:05.86,0:23:06.48,EN,,0,0,0,,It's a procedure.
Dialogue: 0,0:23:06.83,0:23:12.27,EN,,0,0,0,,I call that dispatch on the message get-signal.
Dialogue: 0,0:23:12.91,0:23:15.40,EN,,0,0,0,,And what I should expect to get is a method of getting a signal.
Dialogue: 0,0:23:16.90,0:23:17.96,EN,,0,0,0,,Or actually, I get the signal.
Dialogue: 0,0:23:19.22,0:23:20.52,EN,,0,0,0,,If I want to set a signal,
Dialogue: 0,0:23:22.65,0:23:23.96,EN,,0,0,0,,I want to change a signal,
Dialogue: 0,0:23:24.51,0:23:26.76,EN,,0,0,0,,then what I'm going to do
Dialogue: 0,0:23:26.92,0:23:29.69,EN,,0,0,0,,is take a wire as an argument and a new value for the signal,
Dialogue: 0,0:23:30.01,0:23:32.43,EN,,0,0,0,,I would ask the wire for permission to set the signal
Dialogue: 0,0:23:32.84,0:23:37.61,EN,,0,0,0,,and use that permission, which is a procedure, on the new value.
Dialogue: 0,0:23:38.70,0:23:40.51,EN,,0,0,0,,And if we go back to the overhead here,
Dialogue: 0,0:23:41.64,0:23:43.24,EN,,0,0,0,,Okay, thank you,
Dialogue: 0,0:23:44.20,0:23:45.63,EN,,0,0,0,,we go back to the overhead here,
Dialogue: 0,0:23:45.92,0:23:48.75,EN,,0,0,0,,we see that the method-- if I ask for the method of setting the signal,
Dialogue: 0,0:23:49.34,0:23:50.44,EN,,0,0,0,,that's over here,
Dialogue: 0,0:23:52.25,0:23:55.69,EN,,0,0,0,,it's set-my-signal, a procedure that's defined inside the wire,
Dialogue: 0,0:23:56.25,0:23:57.69,EN,,0,0,0,,which if we look over here
Dialogue: 0,0:23:58.72,0:23:59.74,EN,,0,0,0,,is the thing that says
Dialogue: 0,0:24:00.43,0:24:02.68,EN,,0,0,0,,set my internal value called the signal,
Dialogue: 0,0:24:02.73,0:24:05.50,EN,,0,0,0,,my internal variable, which is the signal,
Dialogue: 0,0:24:07.61,0:24:10.03,EN,,0,0,0,,to the new value, which is passed to me as an argument,
Dialogue: 0,0:24:10.78,0:24:13.01,EN,,0,0,0,,and then call each of the action procedures waking them up.
Dialogue: 0,0:24:16.34,0:24:16.99,EN,,0,0,0,,Very simple.
Dialogue: 0,0:24:19.24,0:24:20.76,EN,,0,0,0,,Ok, Going back to that slide,
Dialogue: 0,0:24:22.48,0:24:24.32,EN,,0,0,0,,we also have the one last thing--
Dialogue: 0,0:24:24.36,0:24:27.31,EN,,0,0,0,,which I suppose now you can easily work out for yourself--
Dialogue: 0,0:24:27.77,0:24:29.15,EN,,0,0,0,,is the way you add an action.
Dialogue: 0,0:24:30.10,0:24:35.18,EN,,0,0,0,,You take a wire--a wire and an action procedure.
Dialogue: 0,0:24:36.47,0:24:39.31,EN,,0,0,0,,And I ask the wire for permission to add an action.
Dialogue: 0,0:24:40.05,0:24:44.22,EN,,0,0,0,,Getting that permission, I use that permission to give it an action procedure.
Dialogue: 0,0:24:45.84,0:24:47.08,EN,,0,0,0,,So that's a real object.
Dialogue: 0,0:24:48.57,0:24:50.32,EN,,0,0,0,,There's a few more details about this.
Dialogue: 0,0:24:52.46,0:24:58.39,EN,,0,0,0,,For example, how am I going to control this thing?
Dialogue: 0,0:24:58.39,0:24:59.69,EN,,0,0,0,,How do I do these delays?
Dialogue: 0,0:25:00.99,0:25:02.54,EN,,0,0,0,,Okay? Let's look at that for a second.
Dialogue: 0,0:25:05.50,0:25:07.98,EN,,0,0,0,,The next one here.
Dialogue: 0,0:25:08.36,0:25:08.88,EN,,0,0,0,,Let's see.
Dialogue: 0,0:25:09.57,0:25:14.17,EN,,0,0,0,,We know when we looked at the and-gate or the not-gate
Dialogue: 0,0:25:15.31,0:25:17.00,EN,,0,0,0,,that when a signal changed on the input,
Dialogue: 0,0:25:17.24,0:25:18.19,EN,,0,0,0,,there was a delay.
Dialogue: 0,0:25:18.77,0:25:21.24,EN,,0,0,0,,And then it was going to call the procedure,
Dialogue: 0,0:25:21.63,0:25:23.00,EN,,0,0,0,,which was going to change the output.
Dialogue: 0,0:25:26.04,0:25:27.92,EN,,0,0,0,,Well, how are we going to do this?
Dialogue: 0,0:25:28.12,0:25:29.92,EN,,0,0,0,,We're going to make up some mechanism,
Dialogue: 0,0:25:30.30,0:25:32.00,EN,,0,0,0,,a fairly complicated mechanism at that,
Dialogue: 0,0:25:32.33,0:25:33.76,EN,,0,0,0,,which we're going to have to be very careful about.
Dialogue: 0,0:25:34.72,0:25:37.23,EN,,0,0,0,,But after a delay, we're going to do an action.
Dialogue: 0,0:25:37.39,0:25:38.12,EN,,0,0,0,,A delay is a number,
Dialogue: 0,0:25:38.16,0:25:39.23,EN,,0,0,0,,and an action is a procedure.
Dialogue: 0,0:25:40.59,0:25:43.72,EN,,0,0,0,,What that's going to be is they're going to have a special structure called an agenda,
Dialogue: 0,0:25:45.50,0:25:48.80,EN,,0,0,0,,which is a thing that organizes time and actions.
Dialogue: 0,0:25:49.51,0:25:50.88,EN,,0,0,0,,And we're going to see that in a while.
Dialogue: 0,0:25:50.88,0:25:52.54,EN,,0,0,0,,I don't want to get into that right now.
Dialogue: 0,0:25:53.07,0:25:58.28,EN,,0,0,0,,But the agenda has a moment at which--at which something happens.
Dialogue: 0,0:25:59.13,0:26:02.46,EN,,0,0,0,,We're setting up for later at some moment,
Dialogue: 0,0:26:02.51,0:26:05.68,EN,,0,0,0,,which is the sum of the time, which is the delay time plus the current time,
Dialogue: 0,0:26:05.69,0:26:07.13,EN,,0,0,0,,which the agenda thinks is now.
Dialogue: 0,0:26:09.02,0:26:10.56,EN,,0,0,0,,We're going to set up to do this action,
Dialogue: 0,0:26:11.02,0:26:12.40,EN,,0,0,0,,and add that to the agenda.
Dialogue: 0,0:26:15.28,0:26:18.03,EN,,0,0,0,,And the way this machine will now run is very simple.
Dialogue: 0,0:26:18.66,0:26:21.48,EN,,0,0,0,,We have a thing called propagate, which is the way things run.
Dialogue: 0,0:26:22.71,0:26:25.95,EN,,0,0,0,,If the agenda is empty, we're done--if there's nothing more to be done.
Dialogue: 0,0:26:27.44,0:26:28.16,EN,,0,0,0,,Otherwise,
Dialogue: 0,0:26:29.76,0:26:31.53,EN,,0,0,0,,we're going to take the first item off the agenda,
Dialogue: 0,0:26:31.71,0:26:33.34,EN,,0,0,0,,and that's a procedure of no arguments.
Dialogue: 0,0:26:34.20,0:26:36.03,EN,,0,0,0,,So that we're going to see extra parentheses here.
Dialogue: 0,0:26:36.03,0:26:37.85,EN,,0,0,0,,We call that on no arguments.
Dialogue: 0,0:26:39.19,0:26:40.17,EN,,0,0,0,,That takes the action.
Dialogue: 0,0:26:42.20,0:26:44.17,EN,,0,0,0,,Then we remove that first item from the agenda,
Dialogue: 0,0:26:44.59,0:26:46.14,EN,,0,0,0,,and we go around the propagation loop.
Dialogue: 0,0:26:48.91,0:26:50.75,EN,,0,0,0,,So that's the overall structure of this thing.
Dialogue: 0,0:26:53.38,0:26:55.93,EN,,0,0,0,,Now, there's a, a few other things we can look at.
Dialogue: 0,0:26:57.43,0:27:00.01,EN,,0,0,0,,And then we're going to look into the agenda a little while from now.
Dialogue: 0,0:27:00.57,0:27:01.55,EN,,0,0,0,,Now the overhead again.
Dialogue: 0,0:27:02.80,0:27:04.67,EN,,0,0,0,,Well, in order to set this thing going,
Dialogue: 0,0:27:04.67,0:27:07.41,EN,,0,0,0,,I just want to show you some behavior out of this simulator.
Dialogue: 0,0:27:07.85,0:27:09.93,EN,,0,0,0,,By the way, you may think this simulator is very simple,
Dialogue: 0,0:27:10.40,0:27:12.01,EN,,0,0,0,,and probably too simple to be useful.
Dialogue: 0,0:27:12.57,0:27:13.76,EN,,0,0,0,,The fact of the matter is
Dialogue: 0,0:27:13.98,0:27:15.39,EN,,0,0,0,,that this simulator has been used
Dialogue: 0,0:27:15.72,0:27:17.44,EN,,0,0,0,,to manufacture a fairly large computer.
Dialogue: 0,0:27:18.68,0:27:20.64,EN,,0,0,0,,So this is a real live example.
Dialogue: 0,0:27:22.36,0:27:24.06,EN,,0,0,0,,Actually, not exactly this simulator，
Dialogue: 0,0:27:24.06,0:27:25.39,EN,,0,0,0,,because I'll tell you the difference.
Dialogue: 0,0:27:25.84,0:27:28.70,EN,,0,0,0,,The difference is that there were many more different kinds of primitives.
Dialogue: 0,0:27:29.82,0:27:32.22,EN,,0,0,0,,There's not just the word inverter or and-gate.
Dialogue: 0,0:27:33.20,0:27:35.72,EN,,0,0,0,,There were things like edge-triggered,
Dialogue: 0,0:27:36.25,0:27:39.88,EN,,0,0,0,,flip-flops, and latches
Dialogue: 0,0:27:40.70,0:27:44.52,EN,,0,0,0,,transparent latches, and adders, and things like that.
Dialogue: 0,0:27:45.17,0:27:47.31,EN,,0,0,0,,And the difficulty with that
Dialogue: 0,0:27:47.45,0:27:50.86,EN,,0,0,0,,is there's pages and pages of the definitions of all these primitives
Dialogue: 0,0:27:51.20,0:27:52.89,EN,,0,0,0,,with numbers like LS04.
Dialogue: 0,0:27:54.69,0:27:56.74,EN,,0,0,0,,And then there's many more parameters for them.
Dialogue: 0,0:27:56.74,0:27:57.98,EN,,0,0,0,,It's not just one delay.
Dialogue: 0,0:27:58.48,0:28:00.81,EN,,0,0,0,,There's things like set up times and hold times and all that.
Dialogue: 0,0:28:01.22,0:28:03.40,EN,,0,0,0,,But with the exception of that part of the complexity,
Dialogue: 0,0:28:03.82,0:28:08.20,EN,,0,0,0,,the structure of the simulator that we use for building a real computer,
Dialogue: 0,0:28:09.08,0:28:12.89,EN,,0,0,0,,that works is exactly what you're seeing here.
Dialogue: 0,0:28:15.11,0:28:19.27,EN,,0,0,0,,Well in any case, what we have here is a few simple things.
Dialogue: 0,0:28:19.27,0:28:22.59,EN,,0,0,0,,Like, there's inverter delays being set up and making a new agenda.
Dialogue: 0,0:28:23.03,0:28:25.52,EN,,0,0,0,,And then we can make some inputs.
Dialogue: 0,0:28:26.03,0:28:29.18,EN,,0,0,0,,Ok? There's input-1, input-2, a sum and a carry, which are wires.
Dialogue: 0,0:28:29.46,0:28:31.88,EN,,0,0,0,,I'm going to put a special kind of object called a probe
Dialogue: 0,0:28:32.51,0:28:34.64,EN,,0,0,0,,onto, onto some of the wires,
Dialogue: 0,0:28:34.97,0:28:36.24,EN,,0,0,0,,onto sum and onto carry.
Dialogue: 0,0:28:37.23,0:28:40.56,EN,,0,0,0,,A probe is a, can object that has the property
Dialogue: 0,0:28:40.70,0:28:43.60,EN,,0,0,0,,that when you change a wire it's attached to,
Dialogue: 0,0:28:43.72,0:28:44.83,EN,,0,0,0,,it types out a message.
Dialogue: 0,0:28:46.12,0:28:46.92,EN,,0,0,0,,It's an easy thing to do.
Dialogue: 0,0:28:48.44,0:28:49.52,EN,,0,0,0,,And then once we have that,
Dialogue: 0,0:28:49.55,0:28:51.45,EN,,0,0,0,,of course, then when you put the probe on,
Dialogue: 0,0:28:51.45,0:28:52.41,EN,,0,0,0,,the first thing it does, it says,
Dialogue: 0,0:28:52.67,0:28:56.01,EN,,0,0,0,,the current value of the sum at time 0 is 0
Dialogue: 0,0:28:57.29,0:28:58.43,EN,,0,0,0,,And because I just noticed it.
Dialogue: 0,0:28:59.40,0:29:04.75,EN,,0,0,0,,And the value of the carry at time 0, this is the time, is 0.
Dialogue: 0,0:29:06.04,0:29:09.28,EN,,0,0,0,,And then we go off and we build some structure.
Dialogue: 0,0:29:09.62,0:29:12.28,EN,,0,0,0,,Like, we can build a structure here that says
Dialogue: 0,0:29:14.06,0:29:18.20,EN,,0,0,0,,you have a half-adder on input-1, input-2, sum, and carry.
Dialogue: 0,0:29:18.42,0:29:20.42,EN,,0,0,0,,And we're going to set the signal on input-1 to 1.
Dialogue: 0,0:29:20.62,0:29:21.72,EN,,0,0,0,,We do some propagation.
Dialogue: 0,0:29:21.88,0:29:22.84,EN,,0,0,0,,At time 8,
Dialogue: 0,0:29:23.90,0:29:26.12,EN,,0,0,0,,which you could see going through this thing if you wanted to,
Dialogue: 0,0:29:26.52,0:29:29.20,EN,,0,0,0,,the new value of sum became 1.
Dialogue: 0,0:29:29.52,0:29:30.44,EN,,0,0,0,,And the thing says I'm done.
Dialogue: 0,0:29:31.16,0:29:32.25,EN,,0,0,0,,That wasn't very interesting.
Dialogue: 0,0:29:32.63,0:29:33.90,EN,,0,0,0,,But we can send it some more signals.
Dialogue: 0,0:29:34.06,0:29:36.73,EN,,0,0,0,,Like, we set-signal on input-2 to be one.
Dialogue: 0,0:29:36.89,0:29:38.09,EN,,0,0,0,,And at that time if we propagate,
Dialogue: 0,0:29:38.36,0:29:39.95,EN,,0,0,0,,then it carried at 11,
Dialogue: 0,0:29:40.12,0:29:41.42,EN,,0,0,0,,the carry becomes 1,
Dialogue: 0,0:29:41.55,0:29:44.19,EN,,0,0,0,,and at 16, the sum's new value becomes 0.
Dialogue: 0,0:29:45.39,0:29:48.99,EN,,0,0,0,,And you might want to work out that, if you like, about the digital circuitry.
Dialogue: 0,0:29:48.99,0:29:50.12,EN,,0,0,0,,It's true, and it works.
Dialogue: 0,0:29:50.62,0:29:51.53,EN,,0,0,0,,And it's not very interesting.
Dialogue: 0,0:29:51.53,0:29:54.12,EN,,0,0,0,,But that's the kind of behavior we get out of this thing.
Dialogue: 0,0:30:01.83,0:30:03.29,EN,,0,0,0,,So what I've shown you right now
Dialogue: 0,0:30:03.48,0:30:05.52,EN,,0,0,0,,is a large-scale picture,
Dialogue: 0,0:30:06.60,0:30:08.56,EN,,0,0,0,,how you, at a bigger, big scale,
Dialogue: 0,0:30:08.72,0:30:12.04,EN,,0,0,0,,you implement an event-driven simulation of some sort.
Dialogue: 0,0:30:13.29,0:30:14.56,EN,,0,0,0,,And how you might organize it
Dialogue: 0,0:30:14.88,0:30:16.70,EN,,0,0,0,,to have nice hierarchical structure
Dialogue: 0,0:30:16.99,0:30:21.00,EN,,0,0,0,,allowing you to build abstract boxes that you can instantiate.
Dialogue: 0,0:30:21.56,0:30:24.96,EN,,0,0,0,,But I haven't told you any of the details about how this agenda and things like that work.
Dialogue: 0,0:30:25.78,0:30:26.54,EN,,0,0,0,,That we'll do next.
Dialogue: 0,0:30:28.63,0:30:32.94,EN,,0,0,0,,And that's going to involve change and mutation of data and things like that.
Dialogue: 0,0:30:34.31,0:30:35.86,EN,,0,0,0,,Are there any questions now, before I go on?
Dialogue: 0,0:30:47.16,0:30:48.24,EN,,0,0,0,,Thank you. Let's take a break.
Dialogue: 0,0:30:50.24,0:31:00.62,EN,,0,0,0,,[JESU, JOY OF MAN'S DESIRING]
Dialogue: 0,0:31:28.94,0:31:35.06,EN,,0,0,0,,Well, we've been making a simulation.
Dialogue: 0,0:31:35.39,0:31:37.77,EN,,0,0,0,,And the simulation is an event-driven simulation
Dialogue: 0,0:31:38.17,0:31:42.75,EN,,0,0,0,,where the objects in the world are the objects in the computer.
Dialogue: 0,0:31:43.92,0:31:47.28,EN,,0,0,0,,And the changes of state that are happening in the world in time
Dialogue: 0,0:31:47.98,0:31:50.83,EN,,0,0,0,,are organized to be time in the computer,
Dialogue: 0,0:31:52.99,0:31:56.04,EN,,0,0,0,,so that if something happens after something else in the world,
Dialogue: 0,0:31:56.46,0:31:57.96,EN,,0,0,0,,then we have it happen after,
Dialogue: 0,0:31:58.89,0:32:02.25,EN,,0,0,0,,after the corresponding events happen in the same order in the computer.
Dialogue: 0,0:32:04.42,0:32:07.16,EN,,0,0,0,,That's where we have assignments, when we make that alignment.
Dialogue: 0,0:32:08.22,0:32:11.21,EN,,0,0,0,,Right now I want to show you a way of organizing time,
Dialogue: 0,0:32:11.80,0:32:14.86,EN,,0,0,0,,which is an agenda or priority queue, it's sometimes called.
Dialogue: 0,0:32:16.04,0:32:18.57,EN,,0,0,0,,We'll do some--we'll do a little bit of just understanding
Dialogue: 0,0:32:18.62,0:32:21.00,EN,,0,0,0,,what are the things we need to be able to do to make agendas.
Dialogue: 0,0:32:28.33,0:32:31.28,EN,,0,0,0,,And so we're going to have--and so right now over here, I'm going to write down a bunch
Dialogue: 0,0:32:31.39,0:32:33.88,EN,,0,0,0,,of primitive operations for manipulating agendas.
Dialogue: 0,0:32:35.96,0:32:37.95,EN,,0,0,0,,I'm not going to show you the code for them
Dialogue: 0,0:32:38.14,0:32:39.58,EN,,0,0,0,,because they're all very simple,
Dialogue: 0,0:32:40.32,0:32:42.60,EN,,0,0,0,,Iand you've got listings of all that anyway.
Dialogue: 0,0:32:43.68,0:32:44.38,EN,,0,0,0,,So what do we have?
Dialogue: 0,0:32:44.38,0:32:53.50,EN,,0,0,0,,We have things like make-agenda which produces a new agenda.
Dialogue: 0,0:32:57.36,0:33:01.77,EN,,0,0,0,,We can ask--we get the current-time of an agenda,
Dialogue: 0,0:33:07.47,0:33:12.80,EN,,0,0,0,,of an agenda, which gives me a number, a time.
Dialogue: 0,0:33:16.99,0:33:21.37,EN,,0,0,0,,We can get--we can ask whether an agenda is empty, empty-agenda.
Dialogue: 0,0:33:30.20,0:33:32.57,EN,,0,0,0,,And that produces either a true or a false.
Dialogue: 0,0:33:42.72,0:33:44.72,EN,,0,0,0,,We can add an object to an agenda.
Dialogue: 0,0:33:52.71,0:33:56.06,EN,,0,0,0,,Actually, what we add to an agenda is an operation--an action to be done.
Dialogue: 0,0:33:56.91,0:33:58.14,EN,,0,0,0,,And that takes a time,
Dialogue: 0,0:33:59.63,0:34:00.56,EN,,0,0,0,,the action itself,
Dialogue: 0,0:34:02.86,0:34:04.64,EN,,0,0,0,,and the agenda I want to add it to.
Dialogue: 0,0:34:07.58,0:34:10.25,EN,,0,0,0,,OK? That inserts it in the appropriate place in the agenda.
Dialogue: 0,0:34:10.71,0:34:12.73,EN,,0,0,0,,I can get the first item off an agenda,
Dialogue: 0,0:34:14.24,0:34:15.39,EN,,0,0,0,,the first thing I have to do,
Dialogue: 0,0:34:21.84,0:34:23.84,EN,,0,0,0,,which is going to give me an action.
Dialogue: 0,0:34:26.46,0:34:28.73,EN,,0,0,0,,And I can remove the first item from an agenda.
Dialogue: 0,0:34:29.54,0:34:31.16,EN,,0,0,0,,That's what I have to be able to do with agendas.
Dialogue: 0,0:34:31.40,0:34:33.02,EN,,0,0,0,,That is a big complicated mess.
Dialogue: 0,0:34:42.53,0:34:43.36,EN,,0,0,0,,From an agenda.
Dialogue: 0,0:34:45.98,0:34:49.85,EN,,0,0,0,,Well, let's see how we can organize this thing as a data structure a bit.
Dialogue: 0,0:34:52.96,0:34:56.04,EN,,0,0,0,,Well, an agenda is going to be some kind of list.
Dialogue: 0,0:34:58.43,0:35:01.20,EN,,0,0,0,,And it's going to be a list that I'm going to have to be able to modify.
Dialogue: 0,0:35:01.57,0:35:04.03,EN,,0,0,0,,So we have to talk about modifying of lists,
Dialogue: 0,0:35:05.80,0:35:06.89,EN,,0,0,0,,because I'm going to add things to it,
Dialogue: 0,0:35:07.77,0:35:10.27,EN,,0,0,0,,and delete things from it, and things like that.
Dialogue: 0,0:35:11.07,0:35:12.51,EN,,0,0,0,,It's organized by time.
Dialogue: 0,0:35:13.82,0:35:15.57,EN,,0,0,0,,It's probably good to keep it in sorted order.
Dialogue: 0,0:35:18.33,0:35:20.88,EN,,0,0,0,,But sometimes there are lots of things that happen at the same time
Dialogue: 0,0:35:22.04,0:35:23.42,EN,,0,0,0,,approximate same time.
Dialogue: 0,0:35:23.80,0:35:24.72,EN,,0,0,0,,What I have to do is say,
Dialogue: 0,0:35:24.91,0:35:27.52,EN,,0,0,0,,group things by the time at which they're supposed to happen.
Dialogue: 0,0:35:29.04,0:35:31.61,EN,,0,0,0,,So I'm going to make an agenda as a list of segments.
Dialogue: 0,0:35:32.78,0:35:35.69,EN,,0,0,0,,And so I'm going to draw you a data structure for an agenda,
Dialogue: 0,0:35:36.68,0:35:37.93,EN,,0,0,0,,a perfectly reasonable one.
Dialogue: 0,0:35:39.62,0:35:40.49,EN,,0,0,0,,Here's an agenda.
Dialogue: 0,0:35:41.11,0:35:42.87,EN,,0,0,0,,It's a thing that begins with a name.
Dialogue: 0,0:35:47.85,0:35:50.19,EN,,0,0,0,,I'm going to do it right now out of list structure.
Dialogue: 0,0:35:52.60,0:35:53.39,EN,,0,0,0,,It's got a header.
Dialogue: 0,0:35:54.14,0:35:55.44,EN,,0,0,0,,There's a reason for the header.
Dialogue: 0,0:35:55.84,0:35:57.63,EN,,0,0,0,,We're going to see the reason soon.
Dialogue: 0,0:36:00.68,0:36:03.40,EN,,0,0,0,,And it will have a segment. We will have--
Dialogue: 0,0:36:03.96,0:36:05.62,EN,,0,0,0,,It will have--it will be a list of segments.
Dialogue: 0,0:36:08.31,0:36:10.54,EN,,0,0,0,,Supposing this agenda has two segments,
Dialogue: 0,0:36:11.58,0:36:15.07,EN,,0,0,0,,OK, they're the car's-- successive car's of this list.
Dialogue: 0,0:36:16.41,0:36:20.57,EN,,0,0,0,,Each segment is going to have a time--
Dialogue: 0,0:36:24.20,0:36:26.64,EN,,0,0,0,,say for example, 10--
Dialogue: 0,0:36:26.83,0:36:30.51,EN,,0,0,0,,that says that the things that happen in this segment are at time 10.
Dialogue: 0,0:36:33.16,0:36:36.52,EN,,0,0,0,,And what I'm going to have in here is another data structure
Dialogue: 0,0:36:36.56,0:36:38.01,EN,,0,0,0,,which I'm not going to describe,
Dialogue: 0,0:36:38.49,0:36:41.08,EN,,0,0,0,,which is a queue of things to do at time 10.
Dialogue: 0,0:36:42.24,0:36:43.33,EN,,0,0,0,,It's a queue.
Dialogue: 0,0:36:43.33,0:36:44.70,EN,,0,0,0,,And we'll talk about that in a second.
Dialogue: 0,0:36:45.20,0:36:50.35,EN,,0,0,0,,But abstractly, the queue is just a list of things to do at a particular time.
Dialogue: 0,0:36:50.40,0:36:52.04,EN,,0,0,0,,And I can add things to a queue.
Dialogue: 0,0:36:53.10,0:36:53.80,EN,,0,0,0,,This is a queue.
Dialogue: 0,0:36:56.14,0:36:59.11,EN,,0,0,0,,There's a time, there's a segment.
Dialogue: 0,0:37:03.23,0:37:06.36,EN,,0,0,0,,Now, I may have another segment in this agenda.
Dialogue: 0,0:37:08.94,0:37:11.20,EN,,0,0,0,,Supposing this is stuff that happens at time 30.
Dialogue: 0,0:37:13.50,0:37:15.92,EN,,0,0,0,,It has, of course, another queue
Dialogue: 0,0:37:16.92,0:37:20.24,EN,,0,0,0,,of things that are queued up to be done at time 30.
Dialogue: 0,0:37:23.21,0:37:25.66,EN,,0,0,0,,Well, there are various things I have to be able to do to an agenda.
Dialogue: 0,0:37:27.09,0:37:29.20,EN,,0,0,0,,Supposing I want to add to an agenda
Dialogue: 0,0:37:29.47,0:37:31.61,EN,,0,0,0,,another thing to be done at time 10.
Dialogue: 0,0:37:33.03,0:37:34.16,EN,,0,0,0,,Well, that's not very hard.
Dialogue: 0,0:37:34.70,0:37:38.65,EN,,0,0,0,,I'm going to walk down here, looking for the segment of time 10.
Dialogue: 0,0:37:39.73,0:37:42.14,EN,,0,0,0,,It is possible that there is no segment of time 10.
Dialogue: 0,0:37:42.93,0:37:44.56,EN,,0,0,0,,We'll cover that case in a second.
Dialogue: 0,0:37:45.42,0:37:47.56,EN,,0,0,0,,But if I find a segment of time 10,
Dialogue: 0,0:37:47.87,0:37:50.43,EN,,0,0,0,,then if I want to add another thing to be done at time 10,
Dialogue: 0,0:37:50.56,0:37:52.16,EN,,0,0,0,,I just increase that queue--
Dialogue: 0,0:37:53.85,0:37:56.22,EN,,0,0,0,,"just increase" isn't such an obvious idea.
Dialogue: 0,0:37:56.57,0:37:59.26,EN,,0,0,0,,But I increase the things to be done at that time.
Dialogue: 0,0:38:01.43,0:38:04.25,EN,,0,0,0,,Now, supposing I want to add something to be done at time 20.
Dialogue: 0,0:38:05.31,0:38:07.90,EN,,0,0,0,,There is no segment for time 20.
Dialogue: 0,0:38:08.99,0:38:10.64,EN,,0,0,0,,I'm going to have to create a new segment.
Dialogue: 0,0:38:11.34,0:38:15.64,EN,,0,0,0,,I want my time 20 segment to exist between time 10 and time 30.
Dialogue: 0,0:38:17.61,0:38:19.32,EN,,0,0,0,,Well, that takes a little work.
Dialogue: 0,0:38:20.17,0:38:21.52,EN,,0,0,0,,I'm going to have to do a CONS.
Dialogue: 0,0:38:24.26,0:38:29.94,EN,,0,0,0,,I'm going to have to make a new element of the agenda list--list of segments.
Dialogue: 0,0:38:33.60,0:38:34.81,EN,,0,0,0,,I'm going to have to change.
Dialogue: 0,0:38:35.40,0:38:36.30,EN,,0,0,0,,Here's change.
Dialogue: 0,0:38:37.54,0:38:42.80,EN,,0,0,0,,I'm going to have to change the CDR of the CDR of the agenda
Dialogue: 0,0:38:44.88,0:38:49.45,EN,,0,0,0,,point that a new CONS of the new segment
Dialogue: 0,0:38:50.11,0:38:54.65,EN,,0,0,0,,and the CDR of the CDR of the CDR of the agenda, the CD-D-D-DR.
Dialogue: 0,0:38:57.18,0:39:01.88,EN,,0,0,0,,And this is going to have a new segment now of time 20
Dialogue: 0,0:39:02.30,0:39:03.72,EN,,0,0,0,,with its own queue,
Dialogue: 0,0:39:04.84,0:39:06.29,EN,,0,0,0,,which now has one element in it.
Dialogue: 0,0:39:10.73,0:39:12.52,EN,,0,0,0,,If I wanted to add something at the end,
Dialogue: 0,0:39:12.54,0:39:15.87,EN,,0,0,0,,I'm going to have to replace the CDR of this,
Dialogue: 0,0:39:16.99,0:39:19.21,EN,,0,0,0,,of this list with something.
Dialogue: 0,0:39:20.59,0:39:23.31,EN,,0,0,0,,We're have to change that piece of data structure.
Dialogue: 0,0:39:24.04,0:39:25.79,EN,,0,0,0,,So I'm going to need new primitives for doing this.
Dialogue: 0,0:39:27.21,0:39:28.62,EN,,0,0,0,,But I'm just showing you why I need them.
Dialogue: 0,0:39:29.44,0:39:33.88,EN,,0,0,0,,And finally, if I wanted to add a thing to be done at time 5,
Dialogue: 0,0:39:37.12,0:39:39.20,EN,,0,0,0,,I'm going to have to change this one,
Dialogue: 0,0:39:40.81,0:39:42.12,EN,,0,0,0,,because I'm going to have to add it in over here,
Dialogue: 0,0:39:43.29,0:39:46.22,EN,,0,0,0,,which is why I planned ahead and had a header cell,
Dialogue: 0,0:39:47.56,0:39:48.59,EN,,0,0,0,,which has a place.
Dialogue: 0,0:39:49.40,0:39:52.11,EN,,0,0,0,,If I'm going to change things, I have to have places for the change.
Dialogue: 0,0:39:53.88,0:39:56.56,EN,,0,0,0,,I have to have a place to make the change.
Dialogue: 0,0:39:58.60,0:40:02.54,EN,,0,0,0,,If I remove things from the agenda, that's not so hard.
Dialogue: 0,0:40:02.54,0:40:04.62,EN,,0,0,0,,Removing them from the beginning is pretty easy,
Dialogue: 0,0:40:04.92,0:40:06.14,EN,,0,0,0,,which is the only case I have.
Dialogue: 0,0:40:06.49,0:40:10.19,EN,,0,0,0,,I can go looking for the first, the first segment.
Dialogue: 0,0:40:11.22,0:40:14.00,EN,,0,0,0,,I see if it has a non-empty queue.
Dialogue: 0,0:40:14.81,0:40:16.17,EN,,0,0,0,,If it has a non-empty queue,
Dialogue: 0,0:40:16.32,0:40:18.62,EN,,0,0,0,,well, I'm going to delete one element from the queue
Dialogue: 0,0:40:19.21,0:40:19.74,EN,,0,0,0,,like that.
Dialogue: 0,0:40:20.10,0:40:21.92,EN,,0,0,0,,If the queue ever becomes empty,
Dialogue: 0,0:40:22.64,0:40:24.22,EN,,0,0,0,,then I have to delete the whole segment.
Dialogue: 0,0:40:24.22,0:40:26.49,EN,,0,0,0,,And then this, this changes to point to here.
Dialogue: 0,0:40:28.22,0:40:31.08,EN,,0,0,0,,So it's quite a complicated data structure manipulation going on,
Dialogue: 0,0:40:32.25,0:40:35.37,EN,,0,0,0,,the details of which are not really very exciting.
Dialogue: 0,0:40:36.44,0:40:38.48,EN,,0,0,0,,Now, let's talk about queues.
Dialogue: 0,0:40:38.92,0:40:39.76,EN,,0,0,0,,They're similar.
Dialogue: 0,0:40:41.16,0:40:43.52,EN,,0,0,0,,Because each of these agendas has a queue in it.
Dialogue: 0,0:40:44.34,0:40:45.02,EN,,0,0,0,,What's a queue?
Dialogue: 0,0:40:49.47,0:40:51.85,EN,,0,0,0,,A queue is going to have the following primitive operations.
Dialogue: 0,0:40:52.78,0:41:02.17,EN,,0,0,0,,To make a queue, this gives me a new queue.
Dialogue: 0,0:41:07.77,0:41:17.10,EN,,0,0,0,,I'm going to have to be able to insert into a queue a new item.
Dialogue: 0,0:41:24.51,0:41:28.65,EN,,0,0,0,,I'm going to have to be able to delete from a queue the first item in the queue.
Dialogue: 0,0:41:40.44,0:41:52.04,EN,,0,0,0,,And I want to be able to get the first thing in the queue from some queue.
Dialogue: 0,0:41:53.13,0:41:55.14,EN,,0,0,0,,I also have to be able to test whether a queue is empty.
Dialogue: 0,0:42:07.11,0:42:08.70,EN,,0,0,0,,And when you invent things like this,
Dialogue: 0,0:42:09.02,0:42:10.44,EN,,0,0,0,,I want you to be very careful
Dialogue: 0,0:42:10.64,0:42:14.09,EN,,0,0,0,,to use the kinds of conventions I use for naming things.
Dialogue: 0,0:42:15.12,0:42:19.15,EN,,0,0,0,,Notice that I'm careful to say these change something and that tests it.
Dialogue: 0,0:42:19.87,0:42:21.85,EN,,0,0,0,,And presumably, I did the same thing over here.
Dialogue: 0,0:42:24.65,0:42:26.96,EN,,0,0,0,,OK, and there should be an empty test over here.
Dialogue: 0,0:42:29.24,0:42:30.72,EN,,0,0,0,,OK, well, how would I make a queue?
Dialogue: 0,0:42:31.72,0:42:34.11,EN,,0,0,0,,A queue wants to be something I can add to at the end of,
Dialogue: 0,0:42:35.12,0:42:36.83,EN,,0,0,0,,and pick up the thing at the beginning of.
Dialogue: 0,0:42:37.84,0:42:40.51,EN,,0,0,0,,I should be able to delete from the beginning and add to the end.
Dialogue: 0,0:42:41.23,0:42:43.24,EN,,0,0,0,,Well, I'm going to show you a very simple structure for that.
Dialogue: 0,0:42:43.88,0:42:45.72,EN,,0,0,0,,We can make this out of CONSes as well.
Dialogue: 0,0:42:47.08,0:42:47.79,EN,,0,0,0,,Here's a queue.
Dialogue: 0,0:42:49.91,0:42:52.36,EN,,0,0,0,,It has--it has a queue header,
Dialogue: 0,0:42:53.58,0:42:54.92,EN,,0,0,0,,which contains two parts--
Dialogue: 0,0:42:55.28,0:42:56.25,EN,,0,0,0,,a front pointer
Dialogue: 0,0:42:58.78,0:42:59.82,EN,,0,0,0,,and a rear pointer.
Dialogue: 0,0:43:03.12,0:43:06.33,EN,,0,0,0,,And here I have a queue with two items in it.
Dialogue: 0,0:43:09.13,0:43:12.09,EN,,0,0,0,,The first item, I don't know, it's perhaps a 1.
Dialogue: 0,0:43:12.46,0:43:16.53,EN,,0,0,0,,And the second item, I don't know, let's give it a 2.
Dialogue: 0,0:43:21.40,0:43:23.52,EN,,0,0,0,,The reason why I want two pointers in here,
Dialogue: 0,0:43:24.09,0:43:25.61,EN,,0,0,0,,a front pointer and a rear pointer,
Dialogue: 0,0:43:25.72,0:43:27.10,EN,,0,0,0,,is so I can add to the end
Dialogue: 0,0:43:27.48,0:43:29.45,EN,,0,0,0,,without having to chase down from the beginning.
Dialogue: 0,0:43:31.85,0:43:34.80,EN,,0,0,0,,So for example, if I wanted to add one more item to this queue,
Dialogue: 0,0:43:35.26,0:43:41.02,EN,,0,0,0,,if I want to add on another item to be worried about later,
Dialogue: 0,0:43:41.08,0:43:42.40,EN,,0,0,0,,all I have to do is make a CONS,
Dialogue: 0,0:43:43.47,0:43:46.59,EN,,0,0,0,,which contains that item, say a 3.
Dialogue: 0,0:43:47.53,0:43:51.34,EN,,0,0,0,,That's for inserting 3 into the queue.
Dialogue: 0,0:43:51.52,0:43:53.77,EN,,0,0,0,,Then I have to change this pointer here
Dialogue: 0,0:43:56.94,0:43:58.76,EN,,0,0,0,,Okay? to here.
Dialogue: 0,0:44:00.10,0:44:04.32,EN,,0,0,0,,And I have to change this one to point to the new rear.
Dialogue: 0,0:44:09.12,0:44:12.68,EN,,0,0,0,,If I wish to take the first element of the queue, the first item,
Dialogue: 0,0:44:12.96,0:44:17.12,EN,,0,0,0,,I just go chasing down the front pointer until I find the first one and pick it up.
Dialogue: 0,0:44:18.89,0:44:23.26,EN,,0,0,0,,If I wish to delete the first item from the queue, delete-queue,
Dialogue: 0,0:44:24.14,0:44:26.35,EN,,0,0,0,,all I do is move the front pointer along this way.
Dialogue: 0,0:44:27.71,0:44:29.31,EN,,0,0,0,,The new front of the queue is now this.
Dialogue: 0,0:44:31.70,0:44:33.13,EN,,0,0,0,,So queues are very simple too.
Dialogue: 0,0:44:34.48,0:44:35.76,EN,,0,0,0,,So what you see now
Dialogue: 0,0:44:37.24,0:44:40.83,EN,,0,0,0,,is that I need a certain number of new primitive operations.
Dialogue: 0,0:44:41.48,0:44:42.56,EN,,0,0,0,,And I'm going to give them some names.
Dialogue: 0,0:44:42.99,0:44:46.28,EN,,0,0,0,,And then we're going to look into how they work, and how they're used.
Dialogue: 0,0:44:47.35,0:44:55.04,EN,,0,0,0,,We have set the CAR of some pair,
Dialogue: 0,0:44:55.88,0:44:59.36,EN,,0,0,0,,or a thing produced by CONSing, to a new value.
Dialogue: 0,0:45:02.37,0:45:09.92,EN,,0,0,0,,And set the CDR of a pair to a new value.
Dialogue: 0,0:45:13.02,0:45:14.78,EN,,0,0,0,,And then we're going to look into how they work.
Dialogue: 0,0:45:16.03,0:45:20.51,EN,,0,0,0,,I needed setting CAR over here to delete the first element of the queue.
Dialogue: 0,0:45:20.96,0:45:22.52,EN,,0,0,0,,This is the CAR, and I had to set it.
Dialogue: 0,0:45:23.47,0:45:24.96,EN,,0,0,0,,I had to be able to set the CDR
Dialogue: 0,0:45:25.28,0:45:27.08,EN,,0,0,0,,to be able to move the rear pointer,
Dialogue: 0,0:45:27.21,0:45:28.76,EN,,0,0,0,,or to be able to increment the queue here.
Dialogue: 0,0:45:30.16,0:45:31.60,EN,,0,0,0,,All of the operations I did
Dialogue: 0,0:45:31.90,0:45:35.90,EN,,0,0,0,,were made out of those that I just showed you on the, on the last blackboard.
Dialogue: 0,0:45:38.17,0:45:40.14,EN,,0,0,0,,Good. Let's pause the time, and take a little break then.
Dialogue: 0,0:45:41.24,0:45:52.67,EN,,0,0,0,,[JESU, JOY OF MAN'S DESIRING]
Dialogue: 0,0:46:38.81,0:46:43.53,EN,,0,0,0,,When we originally introduced pairs made out of CONS, made by CONS,
Dialogue: 0,0:46:44.57,0:46:46.80,EN,,0,0,0,,we only said a few axioms about them,
Dialogue: 0,0:46:48.09,0:46:50.76,EN,,0,0,0,,which were of the form-- what were they--
Dialogue: 0,0:46:52.28,0:47:03.64,EN,,0,0,0,,for all X and Y, the CAR of the CONS of X and Y is X
Dialogue: 0,0:47:05.31,0:47:12.92,EN,,0,0,0,,and Y is X and the CDR of the CONS of X and Y is Y.
Dialogue: 0,0:47:14.80,0:47:20.00,EN,,0,0,0,,Now, these say nothing about whether a CONS has an identity like a person.
Dialogue: 0,0:47:21.85,0:47:25.58,EN,,0,0,0,,In fact, all they say is something sort of abstract,
Dialogue: 0,0:47:25.74,0:47:27.95,EN,,0,0,0,,that a CONS is the parts it's made out of.
Dialogue: 0,0:47:29.74,0:47:33.18,EN,,0,0,0,,And of course, two things are made out of the same parts, they're the same,
Dialogue: 0,0:47:33.93,0:47:35.71,EN,,0,0,0,,at least from the point of view of these axioms.
Dialogue: 0,0:47:37.32,0:47:39.21,EN,,0,0,0,,But by introducing assignment--
Dialogue: 0,0:47:39.84,0:47:42.32,EN,,0,0,0,,in fact, mutable data is a kind of assignment,
Dialogue: 0,0:47:42.88,0:47:44.43,EN,,0,0,0,,we have a set CAR and a set CDR--
Dialogue: 0,0:47:45.55,0:47:48.94,EN,,0,0,0,,by introducing those, these axioms no longer tell the whole story.
Dialogue: 0,0:47:49.83,0:47:52.03,EN,,0,0,0,,And they're still true if written exactly like this.
Dialogue: 0,0:47:53.25,0:47:54.94,EN,,0,0,0,,But they don't tell the whole story.
Dialogue: 0,0:47:56.07,0:48:01.68,EN,,0,0,0,,Because if I'm going to set a particular CAR in a particular CONS,
Dialogue: 0,0:48:03.02,0:48:04.03,EN,,0,0,0,,the questions are,
Dialogue: 0,0:48:04.24,0:48:08.64,EN,,0,0,0,,well, is that setting all CARs and all CONSes of the same two things or not?
Dialogue: 0,0:48:10.09,0:48:13.04,EN,,0,0,0,,If I--if we use CONSes to make up things like rational numbers,
Dialogue: 0,0:48:14.86,0:48:17.10,EN,,0,0,0,,or things like 3 over 4,
Dialogue: 0,0:48:17.34,0:48:20.25,EN,,0,0,0,,supposing I had two three-fourths.
Dialogue: 0,0:48:21.57,0:48:22.75,EN,,0,0,0,,Are they the same one--
Dialogue: 0,0:48:24.06,0:48:24.89,EN,,0,0,0,,or are they different?
Dialogue: 0,0:48:25.34,0:48:26.96,EN,,0,0,0,,Well, in the case of numbers, it doesn't matter.
Dialogue: 0,0:48:27.86,0:48:30.49,EN,,0,0,0,,Because there's no meaning to changing the denominator of a number.
Dialogue: 0,0:48:33.02,0:48:35.32,EN,,0,0,0,,What you could do is make a number which has a different denominator.
Dialogue: 0,0:48:36.84,0:48:39.88,EN,,0,0,0,,But the concept of changing a number which has to have a different denominator
Dialogue: 0,0:48:40.00,0:48:43.58,EN,,0,0,0,,is sort of a very weird, and sort of not supported by what you think of as mathematics.
Dialogue: 0,0:48:44.77,0:48:47.40,EN,,0,0,0,,However, when these CONSes represent things in the physical world,
Dialogue: 0,0:48:48.97,0:48:50.43,EN,,0,0,0,,then changing something like the CAR
Dialogue: 0,0:48:50.60,0:48:52.20,EN,,0,0,0,,like removing a piece of the fingernail.
Dialogue: 0,0:48:53.69,0:48:56.56,EN,,0,0,0,,And so CONSes have an identity.
Dialogue: 0,0:48:57.77,0:48:59.92,EN,,0,0,0,,Let me show you what I mean about identity, first of all.
Dialogue: 0,0:49:01.28,0:49:03.05,EN,,0,0,0,,Let's do some little example here.
Dialogue: 0,0:49:04.32,0:49:15.20,EN,,0,0,0,,Supposing I define A to the CONS of 1 and 2.
Dialogue: 0,0:49:18.32,0:49:19.76,EN,,0,0,0,,Well, what that means, first of all,
Dialogue: 0,0:49:20.67,0:49:25.20,EN,,0,0,0,,is that somewhere in some environment I've made a symbol A
Dialogue: 0,0:49:25.96,0:49:28.67,EN,,0,0,0,,to have a value which is a pair
Dialogue: 0,0:49:29.47,0:49:34.06,EN,,0,0,0,,consisting of pointers to a 1 and a pointer to a 2,
Dialogue: 0,0:49:35.34,0:49:36.16,EN,,0,0,0,,just like that.
Dialogue: 0,0:49:38.12,0:49:39.60,EN,,0,0,0,,Now, supposing I also say
Dialogue: 0,0:49:40.22,0:49:47.58,EN,,0,0,0,,define B to be the CONS--
Dialogue: 0,0:49:53.88,0:49:56.81,EN,,0,0,0,,it doesn't matter, but I like it better, it's prettier--
Dialogue: 0,0:49:57.63,0:49:59.88,EN,,0,0,0,,of A and A.
Dialogue: 0,0:50:03.97,0:50:06.03,EN,,0,0,0,,Well, first of all, I'm using the name A twice.
Dialogue: 0,0:50:07.84,0:50:10.57,EN,,0,0,0,,At this moment, I'm going to think of CONSes as having identity.
Dialogue: 0,0:50:11.30,0:50:12.64,EN,,0,0,0,,This is the same one.
Dialogue: 0,0:50:13.69,0:50:14.81,EN,,0,0,0,,And so what that means
Dialogue: 0,0:50:15.29,0:50:17.61,EN,,0,0,0,,is I make another pair,
Dialogue: 0,0:50:18.81,0:50:20.20,EN,,0,0,0,,which I'm going to call B.
Dialogue: 0,0:50:22.38,0:50:27.60,EN,,0,0,0,,And it contains two pointers to A.
Dialogue: 0,0:50:28.92,0:50:32.20,EN,,0,0,0,,At this point, I have three names for this object.
Dialogue: 0,0:50:33.10,0:50:34.16,EN,,0,0,0,,A is its name.
Dialogue: 0,0:50:34.88,0:50:36.46,EN,,0,0,0,,The CAR of B is its name.
Dialogue: 0,0:50:37.23,0:50:38.86,EN,,0,0,0,,And the CDR of B is its name.
Dialogue: 0,0:50:39.36,0:50:41.15,EN,,0,0,0,,It has several aliases, they're called.
Dialogue: 0,0:50:44.23,0:50:49.28,EN,,0,0,0,,Now, supposing I do something like set-the-CAR,
Dialogue: 0,0:50:53.77,0:51:08.38,EN,,0,0,0,,the CAR of the CAR of B to 3.
Dialogue: 0,0:51:12.75,0:51:17.45,EN,,0,0,0,,What that means is I find the CAR of B, that's this.
Dialogue: 0,0:51:17.83,0:51:20.93,EN,,0,0,0,,I set the CAR of that to be 3, changing this.
Dialogue: 0,0:51:24.76,0:51:25.69,EN,,0,0,0,,I've changed A.
Dialogue: 0,0:51:27.24,0:51:33.64,EN,,0,0,0,,If I were to ask what's the CAR of A--of A now?
Dialogue: 0,0:51:35.34,0:51:37.56,EN,,0,0,0,,I would get out 3,
Dialogue: 0,0:51:38.68,0:51:43.39,EN,,0,0,0,,even though here we see that A was the CONS of 1 and 2.
Dialogue: 0,0:51:45.29,0:51:47.44,EN,,0,0,0,,I caused A to change by changing B.
Dialogue: 0,0:51:48.56,0:51:49.64,EN,,0,0,0,,There is sharing here.
Dialogue: 0,0:51:52.25,0:51:53.47,EN,,0,0,0,,That's sometimes what we want.
Dialogue: 0,0:51:54.24,0:51:56.12,EN,,0,0,0,,Surely in the queues and things like that,
Dialogue: 0,0:51:56.24,0:52:02.38,EN,,0,0,0,,that's exactly what we defined our--organized our data structures to facilitate-- sharing.
Dialogue: 0,0:52:04.35,0:52:05.66,EN,,0,0,0,,But inadvertent sharing,
Dialogue: 0,0:52:07.76,0:52:09.72,EN,,0,0,0,,unanticipated interactions between objects,
Dialogue: 0,0:52:10.78,0:52:14.08,EN,,0,0,0,,is the source of most of the bugs that occur in complicated programs.
Dialogue: 0,0:52:15.44,0:52:21.66,EN,,0,0,0,,So by introducing this possibility of things having identity and sharing
Dialogue: 0,0:52:21.87,0:52:23.76,EN,,0,0,0,,and having multiple names for the same thing,
Dialogue: 0,0:52:24.08,0:52:25.05,EN,,0,0,0,,we get a lot of power.
Dialogue: 0,0:52:25.13,0:52:28.46,EN,,0,0,0,,But we're going to pay for it with lots of complexity and bugs.
Dialogue: 0,0:52:32.19,0:52:36.24,EN,,0,0,0,,So also, for example, if I just looked at this just to drive that home,
Dialogue: 0,0:52:37.10,0:52:39.87,EN,,0,0,0,,the CADR of B,
Dialogue: 0,0:52:42.46,0:52:46.56,EN,,0,0,0,,which has nothing to do with even the CAR of B, apparently.
Dialogue: 0,0:52:46.88,0:52:49.02,EN,,0,0,0,,The CADR of B, what's that?
Dialogue: 0,0:52:49.35,0:52:53.56,EN,,0,0,0,,Take that CDR of B and now take the CAR of that.
Dialogue: 0,0:52:53.56,0:52:54.86,EN,,0,0,0,,Oh, that's 3 also.
Dialogue: 0,0:52:56.48,0:53:00.43,EN,,0,0,0,,So I can have non-local interactions by sharing.
Dialogue: 0,0:53:01.12,0:53:02.48,EN,,0,0,0,,And I have to be very careful of that.
Dialogue: 0,0:53:06.64,0:53:12.64,EN,,0,0,0,,Well, so far, of course, it seems I've introduced several different assignment operators--
Dialogue: 0,0:53:13.18,0:53:17.61,EN,,0,0,0,,set, set CAR, set CDR.
Dialogue: 0,0:53:18.51,0:53:21.39,EN,,0,0,0,,Well, maybe I should just get rid of set CAR and set CDR. Maybe they're not worthwhile.
Dialogue: 0,0:53:22.82,0:53:23.66,EN,,0,0,0,,Well, the answer is
Dialogue: 0,0:53:24.12,0:53:26.11,EN,,0,0,0,,that once you let the camel's nose into the tent,
Dialogue: 0,0:53:26.24,0:53:27.34,EN,,0,0,0,,the rest of him follows.
Dialogue: 0,0:53:30.16,0:53:31.26,EN,,0,0,0,,All I have to have is set,
Dialogue: 0,0:53:31.61,0:53:35.85,EN,,0,0,0,,and I can make all of the--all of the bad things that can happen.
Dialogue: 0,0:53:38.55,0:53:39.80,EN,,0,0,0,,Let's play with that a little bit.
Dialogue: 0,0:53:40.69,0:53:43.72,EN,,0,0,0,,A couple of days ago, when we introduced compound data,
Dialogue: 0,0:53:45.13,0:53:51.20,EN,,0,0,0,,you saw Hal show you a definition of CONS in terms of a message acceptor.
Dialogue: 0,0:53:52.48,0:53:56.06,EN,,0,0,0,,I'm going to show you even a more horrible thing,
Dialogue: 0,0:53:57.13,0:54:00.04,EN,,0,0,0,,a definition of CONS in terms of nothing but air,
Dialogue: 0,0:54:02.56,0:54:03.02,EN,,0,0,0,,hot air.
Dialogue: 0,0:54:04.44,0:54:08.12,EN,,0,0,0,,What is the definition of CONS, of the old functional kind,
Dialogue: 0,0:54:09.26,0:54:11.66,EN,,0,0,0,,in terms of purely lambdic expressions,
Dialogue: 0,0:54:13.39,0:54:14.40,EN,,0,0,0,,procedures?
Dialogue: 0,0:54:17.39,0:54:19.66,EN,,0,0,0,,Because I'm going to then modify this definition
Dialogue: 0,0:54:20.30,0:54:23.16,EN,,0,0,0,,to get assignment to be only one kind of assignment,
Dialogue: 0,0:54:24.28,0:54:27.93,EN,,0,0,0,,to get rid of the set CAR and set CDR in terms of set.
Dialogue: 0,0:54:28.58,0:54:37.39,EN,,0,0,0,,So what if I define CONS of X and Y
Dialogue: 0,0:54:38.91,0:54:42.56,EN,,0,0,0,,to be a procedure of one argument called a message M,
Dialogue: 0,0:54:43.39,0:54:46.32,EN,,0,0,0,,which calls that message on X and Y?
Dialogue: 0,0:54:51.12,0:54:53.10,EN,,0,0,0,,This idea was invented by Alonzo Church,
Dialogue: 0,0:54:53.77,0:54:55.72,EN,,0,0,0,,who was the greatest programmer of the 20th century,
Dialogue: 0,0:54:55.79,0:54:57.15,EN,,0,0,0,,although he never saw a computer.
Dialogue: 0,0:54:57.87,0:54:59.13,EN,,0,0,0,,It was done in the 1930s.
Dialogue: 0,0:54:59.42,0:55:02.22,EN,,0,0,0,,He was a logician, I suppose at Princeton at the time.
Dialogue: 0,0:55:08.66,0:55:10.43,EN,,0,0,0,,Define CAR of X
Dialogue: 0,0:55:13.10,0:55:16.92,EN,,0,0,0,,to be the result of applying X to that procedure of two arguments,
Dialogue: 0,0:55:17.15,0:55:20.60,EN,,0,0,0,,A and D, which selects A.
Dialogue: 0,0:55:23.71,0:55:24.97,EN,,0,0,0,,I will define CDR of X
Dialogue: 0,0:55:33.10,0:55:34.78,EN,,0,0,0,,to be that procedure,
Dialogue: 0,0:55:35.08,0:55:40.25,EN,,0,0,0,,to be the result of applying X to that procedure of A and D,
Dialogue: 0,0:55:40.92,0:55:42.04,EN,,0,0,0,,which selects D.
Dialogue: 0,0:55:46.67,0:55:49.88,EN,,0,0,0,,Now, you may not recognize this as CAR, CDR, and CONS.
Dialogue: 0,0:55:50.51,0:55:53.61,EN,,0,0,0,,But I'm going to demonstrate to you that it satisfies the original axioms
Dialogue: 0,0:55:54.11,0:55:54.81,EN,,0,0,0,,just once.
Dialogue: 0,0:55:55.61,0:55:57.56,EN,,0,0,0,,And then we're going to do some playing of games.
Dialogue: 0,0:55:58.29,0:56:06.27,EN,,0,0,0,,Consider the problem CAR of CONS of, say, 35 and 47.
Dialogue: 0,0:56:09.93,0:56:10.96,EN,,0,0,0,,Well, what is that?
Dialogue: 0,0:56:11.12,0:56:15.24,EN,,0,0,0,,It is the result of taking car of the result of substituting 35 and 47
Dialogue: 0,0:56:15.37,0:56:18.20,EN,,0,0,0,,X and Y in the body of this.
Dialogue: 0,0:56:19.71,0:56:20.69,EN,,0,0,0,,Well, that's easy enough.
Dialogue: 0,0:56:20.69,0:56:30.88,EN,,0,0,0,,That's CAR of the result of substituting into lambda of M, M of 35 and 47.
Dialogue: 0,0:56:35.53,0:56:39.36,EN,,0,0,0,,Well, what this is, is the result of substituting this object
Dialogue: 0,0:56:39.44,0:56:41.85,EN,,0,0,0,,for X in the body of that.
Dialogue: 0,0:56:42.83,0:56:47.66,EN,,0,0,0,,So that's just lambda of M--
Dialogue: 0,0:56:48.33,0:56:52.19,EN,,0,0,0,,that's substituted, because this object is being substituted for X,
Dialogue: 0,0:56:52.88,0:56:54.35,EN,,0,0,0,,which is the beginning of a list,
Dialogue: 0,0:56:54.88,0:57:00.32,EN,,0,0,0,,lambda of M-- M of 35 and 47,
Dialogue: 0,0:57:03.10,0:57:07.31,EN,,0,0,0,,applied to that procedure of A and D,
Dialogue: 0,0:57:07.48,0:57:08.67,EN,,0,0,0,,which gives me A.
Dialogue: 0,0:57:10.91,0:57:14.62,EN,,0,0,0,,Well, that's the result of substituting this for M here.
Dialogue: 0,0:57:15.96,0:57:21.71,EN,,0,0,0,,So that's the same thing as lambda of A, D, A,
Dialogue: 0,0:57:22.22,0:57:24.84,EN,,0,0,0,,applied to 35 and 47.
Dialogue: 0,0:57:26.33,0:57:27.37,EN,,0,0,0,,Oh, well that's 35.
Dialogue: 0,0:57:27.40,0:57:31.21,EN,,0,0,0,,That's substituting 35 for A and for 47 for D in A.
Dialogue: 0,0:57:35.60,0:57:37.24,EN,,0,0,0,,So I don't need any data at all.
Dialogue: 0,0:57:37.88,0:57:38.75,EN,,0,0,0,,not even numbers.
Dialogue: 0,0:57:40.92,0:57:42.64,EN,,0,0,0,,This is Alonso Church's hack.
Dialogue: 0,0:57:52.42,0:57:56.17,EN,,0,0,0,,Well, now we're going to do something nasty to him.
Dialogue: 0,0:57:56.76,0:57:58.49,EN,,0,0,0,,Being a logician, he wouldn't like this.
Dialogue: 0,0:57:59.20,0:58:01.96,EN,,0,0,0,,But as programmers, let's look at the overhead.
Dialogue: 0,0:58:03.26,0:58:04.16,EN,,0,0,0,,And here we go.
Dialogue: 0,0:58:05.39,0:58:07.58,EN,,0,0,0,,I'm going to change the definition of CONS.
Dialogue: 0,0:58:09.57,0:58:12.35,EN,,0,0,0,,It's almost the same as Alonzo Church's, but not quite.
Dialogue: 0,0:58:14.41,0:58:15.50,EN,,0,0,0,,What do we have here?
Dialogue: 0,0:58:16.07,0:58:18.72,EN,,0,0,0,,The CONS of two arguments, X and Y,
Dialogue: 0,0:58:19.50,0:58:22.51,EN,,0,0,0,,is going to be that procedure of one argument M,
Dialogue: 0,0:58:23.39,0:58:25.64,EN,,0,0,0,,which supplies M to X and Y as before,
Dialogue: 0,0:58:26.19,0:58:29.29,EN,,0,0,0,,but also to two permissions,
Dialogue: 0,0:58:30.17,0:58:32.01,EN,,0,0,0,,the permission to set X to N
Dialogue: 0,0:58:32.60,0:58:34.40,EN,,0,0,0,,and the permission to set Y to N,
Dialogue: 0,0:58:34.44,0:58:35.68,EN,,0,0,0,,given that I have an N.
Dialogue: 0,0:58:40.94,0:58:44.72,EN,,0,0,0,,So besides the things that I had here in Church's definition,
Dialogue: 0,0:58:45.72,0:58:51.66,EN,,0,0,0,,what I have is that the thing that CONS returns
Dialogue: 0,0:58:52.12,0:58:53.82,EN,,0,0,0,,will apply its argument
Dialogue: 0,0:58:54.91,0:58:59.44,EN,,0,0,0,,to not just the values of the X and Y that the CONS is made of,
Dialogue: 0,0:58:59.69,0:59:03.58,EN,,0,0,0,,but also permissions to set X and Y to new values.
Dialogue: 0,0:59:06.54,0:59:08.08,EN,,0,0,0,,Now, of course, just as before,
Dialogue: 0,0:59:08.83,0:59:10.51,EN,,0,0,0,,CAR is exactly the same.
Dialogue: 0,0:59:11.69,0:59:14.36,EN,,0,0,0,,The CAR of X is nothing more than applying X,
Dialogue: 0,0:59:14.54,0:59:16.00,EN,,0,0,0,,as in Church's definition,
Dialogue: 0,0:59:16.86,0:59:19.00,EN,,0,0,0,,to a procedure, in this case, of four arguments,
Dialogue: 0,0:59:19.29,0:59:21.04,EN,,0,0,0,,which selects out the first one.
Dialogue: 0,0:59:22.54,0:59:24.16,EN,,0,0,0,,And just as we did before,
Dialogue: 0,0:59:25.42,0:59:26.96,EN,,0,0,0,,that will be the value of X
Dialogue: 0,0:59:29.04,0:59:35.40,EN,,0,0,0,,that was contained in the procedure which is the result of evaluating this lambda expression
Dialogue: 0,0:59:35.45,0:59:37.84,EN,,0,0,0,,in the environment where X and Y are defined over here.
Dialogue: 0,0:59:41.94,0:59:43.15,EN,,0,0,0,,That's the value of CONS.
Dialogue: 0,0:59:45.64,0:59:47.53,EN,,0,0,0,,Now, however, the exciting part.
Dialogue: 0,0:59:47.73,0:59:48.96,EN,,0,0,0,,CDR, of course, is the same.
Dialogue: 0,0:59:49.39,0:59:50.35,EN,,0,0,0,,The exciting part,
Dialogue: 0,0:59:51.23,0:59:52.52,EN,,0,0,0,,set CAR and set CDR.
Dialogue: 0,0:59:53.45,0:59:55.52,EN,,0,0,0,,Well, they're nothing very complicated anymore.
Dialogue: 0,0:59:55.80,1:00:00.64,EN,,0,0,0,,Set CAR of a CONS X to a new value Y
Dialogue: 0,1:00:01.63,1:00:03.85,EN,,0,0,0,,is nothing more than applying that CONS,
Dialogue: 0,1:00:04.11,1:00:06.76,EN,,0,0,0,,which is the procedure of four--the procedure of one argument
Dialogue: 0,1:00:07.69,1:00:09.80,EN,,0,0,0,,which applies its argument to four things,
Dialogue: 0,1:00:11.24,1:00:15.85,EN,,0,0,0,,to a procedure which is of four arguments--
Dialogue: 0,1:00:16.00,1:00:18.08,EN,,0,0,0,,the value of X, the value of Y,
Dialogue: 0,1:00:18.32,1:00:20.54,EN,,0,0,0,,permission to set X, the permission to set Y--
Dialogue: 0,1:00:21.32,1:00:26.09,EN,,0,0,0,,and using it--using that permission to set X to the new value.
Dialogue: 0,1:00:31.65,1:00:33.54,EN,,0,0,0,,And similarly, set-cdr is the same thing.
Dialogue: 0,1:00:36.25,1:00:39.44,EN,,0,0,0,,So what you've just seen is that I didn't introduce any new primitives at all.
Dialogue: 0,1:00:40.11,1:00:44.36,EN,,0,0,0,,I mean, Whether or not I want to implement it this way is a matter of engineering.
Dialogue: 0,1:00:45.34,1:00:47.39,EN,,0,0,0,,And the answer is of course I don't implement it this way
Dialogue: 0,1:00:48.09,1:00:49.63,EN,,0,0,0,,for reasons that have to do with engineering.
Dialogue: 0,1:00:51.68,1:00:53.40,EN,,0,0,0,,However in principle, logically,
Dialogue: 0,1:00:54.28,1:00:56.43,EN,,0,0,0,,I introduced one assignment operator,
Dialogue: 0,1:00:56.96,1:00:58.76,EN,,0,0,0,,I've assigned--I've introduced them all.
Dialogue: 0,1:01:05.42,1:01:06.67,EN,,0,0,0,,Are there any questions?
Dialogue: 0,1:01:09.20,1:01:10.89,EN,,0,0,0,,Yes, David.
Dialogue: 0,1:01:12.04,1:01:15.64,EN,,0,0,0,,AUDIENCE: I can follow you up until you get--I can follow all of that.
Dialogue: 0,1:01:15.64,1:01:17.61,EN,,0,0,0,,But when we bring in the permissions,
Dialogue: 0,1:01:18.14,1:01:21.64,EN,,0,0,0,,defining CONS in terms of the lambda N,
Dialogue: 0,1:01:21.80,1:01:24.21,EN,,0,0,0,,I don't follow where N gets passed.
Dialogue: 0,1:01:24.21,1:01:25.69,EN,,0,0,0,,PROFESSOR: Oh, I'm sorry. I'll show you.
Dialogue: 0,1:01:26.34,1:01:27.05,EN,,0,0,0,,Let's follow it.
Dialogue: 0,1:01:27.36,1:01:29.07,EN,,0,0,0,,Of course, we could do it on the blackboard.
Dialogue: 0,1:01:29.18,1:01:30.17,EN,,0,0,0,,It's not so hard.
Dialogue: 0,1:01:30.17,1:01:31.47,EN,,0,0,0,,But it's also easy here.
Dialogue: 0,1:01:32.45,1:01:35.79,EN,,0,0,0,,Supposing I wish to set-cdr of X to Y.
Dialogue: 0,1:01:37.79,1:01:39.66,EN,,0,0,0,,See that right there. set cdr x to y
Dialogue: 0,1:01:40.36,1:01:41.92,EN,,0,0,0,,X is presumably a CONS,
Dialogue: 0,1:01:43.31,1:01:45.24,EN,,0,0,0,,a thing resulting from evaluating CONS.
Dialogue: 0,1:01:45.88,1:01:46.35,EN,,0,0,0,,right?
Dialogue: 0,1:01:46.89,1:01:49.96,EN,,0,0,0,,Therefore X comes from a place over here,
Dialogue: 0,1:01:52.57,1:01:56.49,EN,,0,0,0,,that that X is of the result of evaluating this lambda expression.
Dialogue: 0,1:01:58.11,1:01:58.49,EN,,0,0,0,,Right?
Dialogue: 0,1:01:59.38,1:02:01.63,EN,,0,0,0,,That when I evaluated that lambda expression,
Dialogue: 0,1:02:04.01,1:02:08.76,EN,,0,0,0,,I evaluated it in an environment where the arguments to CONS were defined.
Dialogue: 0,1:02:11.75,1:02:15.18,EN,,0,0,0,,That means that as free variables in this lambda expression,
Dialogue: 0,1:02:16.25,1:02:18.68,EN,,0,0,0,,there is the--there are in the frame,
Dialogue: 0,1:02:18.72,1:02:22.44,EN,,0,0,0,,which is the parent frame of this lambda expression,
Dialogue: 0,1:02:23.23,1:02:25.82,EN,,0,0,0,,the procedure resulting from this lambda expression,
Dialogue: 0,1:02:26.65,1:02:28.51,EN,,0,0,0,,X and Y have places.
Dialogue: 0,1:02:29.25,1:02:30.83,EN,,0,0,0,,And it's possible to set them.
Dialogue: 0,1:02:31.91,1:02:36.08,EN,,0,0,0,,I set them to an N, which is the argument of the permission.
Dialogue: 0,1:02:37.26,1:02:39.31,EN,,0,0,0,,The permission is a procedure
Dialogue: 0,1:02:41.40,1:02:43.18,EN,,0,0,0,,which is passed to M,
Dialogue: 0,1:02:43.29,1:02:46.51,EN,,0,0,0,,which is the argument that the CONS object gets passed.
Dialogue: 0,1:02:47.94,1:02:50.91,EN,,0,0,0,,Now, let's go back here in the set-cdr
Dialogue: 0,1:02:52.11,1:02:55.42,EN,,0,0,0,,The CONS object, which is the first argument of set-cdr
Dialogue: 0,1:02:56.12,1:02:57.48,EN,,0,0,0,,gets passed an argument.
Dialogue: 0,1:02:59.77,1:03:02.22,EN,,0,0,0,,That--there's a procedure of four things, indeed,
Dialogue: 0,1:03:02.32,1:03:04.65,EN,,0,0,0,,because that's the same thing as this M over here,
Dialogue: 0,1:03:04.99,1:03:06.56,EN,,0,0,0,,which is applied to four objects.
Dialogue: 0,1:03:07.92,1:03:13.34,EN,,0,0,0,,The object over here, SD, is, in fact, this permission.
Dialogue: 0,1:03:15.47,1:03:19.93,EN,,0,0,0,,When I use SD, I apply it to Y, right there.
Dialogue: 0,1:03:22.91,1:03:24.04,EN,,0,0,0,,So that comes from this.
Dialogue: 0,1:03:25.37,1:03:26.92,EN,,0,0,0,,AUDIENCE: So what do you--
Dialogue: 0,1:03:27.00,1:03:32.19,EN,,0,0,0,,PROFESSOR: So to finish that, the N that was here is the Y which is here.
Dialogue: 0,1:03:34.04,1:03:34.52,EN,,0,0,0,,How's that?
Dialogue: 0,1:03:34.81,1:03:35.75,EN,,0,0,0,,AUDIENCE: Right, OK.
Dialogue: 0,1:03:35.75,1:03:37.29,EN,,0,0,0,,Now, when you do a set-cdr,
Dialogue: 0,1:03:39.07,1:03:41.97,EN,,0,0,0,,X is the value the CDR is going to become.
Dialogue: 0,1:03:41.97,1:03:44.03,EN,,0,0,0,,PROFESSOR: The X over here.
Dialogue: 0,1:03:44.96,1:03:46.20,EN,,0,0,0,,I'm sorry, that's not true.
Dialogue: 0,1:03:46.20,1:03:48.33,EN,,0,0,0,,The X is--set-cdr has two arguments--
Dialogue: 0,1:03:48.91,1:03:50.36,EN,,0,0,0,,The CONS I'm changing
Dialogue: 0,1:03:51.34,1:03:53.93,EN,,0,0,0,,and the value I'm changing it to.
Dialogue: 0,1:03:56.15,1:03:58.32,EN,,0,0,0,,So you have them backwards, that's all.
Dialogue: 0,1:04:02.17,1:04:03.16,EN,,0,0,0,,Are there any other questions?
Dialogue: 0,1:04:07.88,1:04:08.64,EN,,0,0,0,,Well, thank you.
Dialogue: 0,1:04:08.64,1:04:09.52,EN,,0,0,0,,It's time for lunch.
Dialogue: 0,1:04:10.44,1:04:28.73,Declare,,0,0,0,,{\fad(500,500)}http://ocw.mit.edu
Dialogue: 0,1:04:10.44,1:04:28.73,Declare,,0,0,0,,{\an2\fad(500,500)}https://github.com/DeathKing/Learning-SICP
